<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on 奇迹之流WonderfloW</title>
    <link>https://wonderflow.info/categories/ruby/</link>
    <description>Recent content in Ruby on 奇迹之流WonderfloW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 21 Nov 2013 16:27:21 +0000</lastBuildDate><atom:link href="https://wonderflow.info/categories/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《ruby元编程》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/11/21/e3808arubye58583e7bc96e7a88be3808be8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Thu, 21 Nov 2013 16:27:21 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/21/e3808arubye58583e7bc96e7a88be3808be8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>总的来说，《ruby元编程》是一本好书。 当我拿到这本书的时候，第一反应是什么叫元编程？书上的定义是这样的：“元编程是写出编写代码的代码”。 而我认为，元编程是ruby语言的一些高级特性，是属于ruby的奇技淫巧。 有意思的是，这本书不是枯燥的一章一章给你灌输这些知识，而是描述公司里一个老程序员一对一带一个年轻程序员的故事。就是所谓的mentor/buddy制度，大部分IT公司都有，就是不知道贯彻的怎么样。不管书中描述的这样的工作情况是不是真的，都很令人神往。 我觉得一个IT行业的大公司就该有这样的气度，把新员工当朋友、兄弟一样培养，毕竟IT行业中，人才是最大的财富。这样带起来的团队，相比凝聚力也是极</description>
    </item>
    
    <item>
      <title>Ruby版的crash_recovery自动化测试工具</title>
      <link>https://wonderflow.info/posts/2013/10/14/rubye78988e79a84crash_recoverye887aae58aa8e58c96e6b58be8af95e5b7a5e585b7/</link>
      <pubDate>Mon, 14 Oct 2013 15:20:42 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/10/14/rubye78988e79a84crash_recoverye887aae58aa8e58c96e6b58be8af95e5b7a5e585b7/</guid>
      <description>高可靠性（High availability）是个相当有意义课题，在现有大型集群机器上，有着广泛的应用。如今，针对这个命题的实现，各大公司都提供了方方面面的方式。针对高可靠性的测试，也就有了意义。 正好近期在学ruby，于是就尝试着用ruby做了一个crash——recovery测试工具。 工具分为两块，第一块是破坏虚拟机，使虚拟机突然宕机。第二块就是杀虚拟机中相应的进程。 最终都是要看进行了这些破坏以后，系统是否能够自动恢复。 破坏虚拟机，使其突然宕机，用到的是我之前博客中写到的方法《Linux Magic Key — SysRq》，使用&amp;quot;echo c &amp;gt; /proc/sysrq-trigger&amp;quot;命令让虚拟</description>
    </item>
    
    <item>
      <title>Eventmachine Introduction Translation</title>
      <link>https://wonderflow.info/posts/2013/07/29/eventmachine-introduction-translation/</link>
      <pubDate>Mon, 29 Jul 2013 08:49:32 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/29/eventmachine-introduction-translation/</guid>
      <description>最近在学Eventmachine，发现Dan Sinclair写的eventmachine introduction真心赞！ 然后跟陈琦一起翻译了一把。看这里：EventMachine入门 Eventmachine是Ruby中相当重要的轻量级通信模块，其相当于node.js，也是CouldFoundry中通信的主要途径。理清Eventmachine的工作机制对于理解CloudFoundry有磨刀不误砍柴工的功效。 关于Eventmachine的学习，我的路线为： 磊哥的博客 github上的Eventmachine Dan Sinclair写的eventmachine的入门导论 有人说，效率不是你工作的时间长短而是你</description>
    </item>
    
  </channel>
</rss>
