<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ACM on 奇迹之流WonderfloW</title>
    <link>https://wonderflow.info/tags/acm/</link>
    <description>Recent content in ACM on 奇迹之流WonderfloW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Aug 2012 14:04:53 +0000</lastBuildDate><atom:link href="https://wonderflow.info/tags/acm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>字符串的编辑距离</title>
      <link>https://wonderflow.info/posts/2012/08/07/e5ad97e7aca6e4b8b2e79a84e7bc96e8be91e8b79de7a6bb/</link>
      <pubDate>Tue, 07 Aug 2012 14:04:53 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/07/e5ad97e7aca6e4b8b2e79a84e7bc96e8be91e8b79de7a6bb/</guid>
      <description>编辑距离，又称Levenshtein距离（也叫做Edit Distance），是指两个字串之间，由一个转成另一个所需的最少编辑操作次数。 许可的编辑操作包括1、将一个字符替换成另一个字符；2、插入一个字符3、删除一个字符。 根据《柔性字符串匹配》一书的介绍，一共有四种方法。 1、最古老，最灵活的动态规划解法。 2、基于自动机的公式法（常用语错误距离允许较小的情况） 3、用位并行来模拟其他方法。 4、先用简单的条件过滤掉文本中大段编辑距离超过范围的不相关文本，再用其他算法进行匹配。 先介绍一下最基本的动态规划解法。空间复杂度和时间复杂度均为O（n^2）。 正好poj3356就是个这样的题目，有兴趣的可以做一下。 用</description>
    </item>
    
    <item>
      <title>扯 &amp;&amp; 最短路floyd的DP解法解释</title>
      <link>https://wonderflow.info/posts/2012/08/02/e689af-e69c80e79fade8b7affloyde79a84dpe8a7a3e6b395e8a7a3e9878a/</link>
      <pubDate>Thu, 02 Aug 2012 14:42:06 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/02/e689af-e69c80e79fade8b7affloyde79a84dpe8a7a3e6b395e8a7a3e9878a/</guid>
      <description>帮鱼头整理集训队训练教程，据说要出书，瞬间感到压力巨大。就那些平时大家随便写写，只是给自己看看的，非常散漫的解题报告，和专题上很多算法本质都不理解的各种报告组成的一个文档。我真的，压力巨大。那么尽自己力量去整理吧。 整本书的结构就是： 章节（专题介绍-&amp;gt;讲的参差不齐）；子目录（该专题算法介绍-&amp;gt;伪代码(反正不是通俗易懂)）; 子目录：例题-&amp;gt;题意-&amp;gt;思路-&amp;gt;代码（这就导致小半本书代码）。 我也不知道这样是好是坏，是否适合读者入门。反正我最讨厌大段大段贴代码的书了。 然后尽力整理吧，其实这本书倒更像是一个模板库，对于把所有专题都了解过的人，是一本很好的复习资料。我就花了一个晚</description>
    </item>
    
    <item>
      <title>2012多校第一、第二场（hdu4300~hdu4319）</title>
      <link>https://wonderflow.info/posts/2012/07/27/2012e5a49ae6a0a1e7acace4b880e38081e7acace4ba8ce59cbaefbc88hdu4300hdu4319efbc89/</link>
      <pubDate>Fri, 27 Jul 2012 12:59:12 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/27/2012e5a49ae6a0a1e7acace4b880e38081e7acace4ba8ce59cbaefbc88hdu4300hdu4319efbc89/</guid>
      <description>说一下自己搞出来的题目吧，感觉多校其实比较水的，题目也不难，模板题，陈题很多，不过两场我们队的名次都很烂诶，30开外了都，抗不住啊！出现的问题就是队里的模板太少、不全。不过也好，做一场补一场的模板。 hdu4300《Clairewd’s message》是个字符串，利用next数组求解，小trick就是next数组求出来的值要小于(len-1)/2才取。即：while(len-next[dx]&amp;lt;=(len-1)/2)dx = next[dx]; #include&amp;lt;iostream&amp;gt; #include&amp;lt;cstring&amp;gt; #include&amp;lt;cstdio&amp;gt; using namespace std; int map[30]; int len; int s[101000]; int next[101000]; char str[101000]; void get_next() { int i,j;i=0;next[0]=-1;j=-1; while(i&amp;lt;len) { if(j==-1||map[s[j]]==s[i]) { ++i;++j; next[i]=j; } else j=next[j]; } } int main() { int T; scanf(&amp;#34;%d&amp;#34;,&amp;amp;T); while(T--){ scanf(&amp;#34;%s&amp;#34;,str); len = strlen(str); for(int i=0;i&amp;lt;len;i++){ map[str[i]-&amp;#39;a&amp;#39;] = i; } scanf(&amp;#34;%s&amp;#34;,str); len = strlen(str); for(int i=0;i&amp;lt;len;i++){ s[i] = str[i] - &amp;#39;a&amp;#39;; } get_next(); // cout&amp;lt;&amp;lt;next[len]&amp;lt;&amp;lt;endl; int dx = len; while(len-next[dx]&amp;lt;=(len-1)/2)dx = next[dx]; // cout&amp;lt;&amp;lt;next[dx]&amp;lt;&amp;lt;endl; for(int i=0;i&amp;lt;len-next[dx];i++){ printf(&amp;#34;%c&amp;#34;,s[i]+&amp;#39;a&amp;#39;); } for(int i=0;i&amp;lt;len-next[dx];i++){ printf(&amp;#34;%c&amp;#34;,map[s[i]]+&amp;#39;a&amp;#39;); } printf(&amp;#34;\n&amp;#34;); } return 0;</description>
    </item>
    
    <item>
      <title>集训日志第十一篇——集训结束</title>
      <link>https://wonderflow.info/posts/2012/07/25/e99b86e8aeade697a5e5bf97e7acace58d81e4b880e7af87-e99b86e8aeade7bb93e69d9f/</link>
      <pubDate>Wed, 25 Jul 2012 00:26:30 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/25/e99b86e8aeade697a5e5bf97e7acace58d81e4b880e7af87-e99b86e8aeade7bb93e69d9f/</guid>
      <description>暑假集训就这么进行到了最后一天，真快。感觉每天的时间就是融汇成了上午一道水题刷完，然后一道难题刷到下午两三点，有时debug到四五点，或者再刷一道题目到晚上八、九点，然后再换一道题目。有时比赛，刷的题目就更少了，比赛中的水题其实没有收获了，所以也不算刷的题目。 果然，一个暑假集训的时间还是不够刷完狗狗四十题啊，有些题目实在没有想法。昨天填那张集训调查表，表上有个问题，问本次集训最大的收获是什么，然后我发现，自己一没有开拓什么新的专题，二没有把自己以前的专题深入，实在汗颜，感到没什么收获。后来仔细一想，倒也不是全无所获，刷狗狗四十题到今天，感觉自己的勇气有了莫大的提升。再恶心的题目，只要有了想法和</description>
    </item>
    
  </channel>
</rss>
