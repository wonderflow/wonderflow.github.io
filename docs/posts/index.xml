<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 奇迹之流WonderfloW</title>
    <link>https://wonderflow.info/posts/</link>
    <description>Recent content in Posts on 奇迹之流WonderfloW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 15 Dec 2020 14:21:16 +0800</lastBuildDate><atom:link href="https://wonderflow.info/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CUE 基础入门</title>
      <link>https://wonderflow.info/posts/2020-12-15-cuelang-template/</link>
      <pubDate>Tue, 15 Dec 2020 14:21:16 +0800</pubDate>
      
      <guid>https://wonderflow.info/posts/2020-12-15-cuelang-template/</guid>
      <description>磨刀不误砍柴工，在正式开始介绍 CUE 之前，可以先做下基本的准备工作。 安装：首先确保你已经安装了 cuelang： https://cuelang.org/docs/install/ 自动格式化：如果你使用 Goland 或者类似的 JetBrains IDE，还可以额外配置自动格式化的方式：https://wonderflow.info/posts/2020-11-02-goland-cuelang-format/ 基本操作 先看一下cuelang的基本数据样子。 a: 1.5 b: 1 d: [1, 2, 3] g: { h: &amp;quot;abc&amp;quot; } 我们把上面的内容写入到文件并命名为 &amp;ldquo;first.cue&amp;rdquo;. 格式化 cuelang 的文件 cue fmt first.cue 校验写法是否正确 cue vet first.cue 计算输出结果 cue eval first.cue 计算输出单个变量的结果 cue eval -e a first.cue 数据导出（默认为json） cue export first.cue 指定 yaml 格式导出 cue export first.cue --out yaml 导出某个变量 cue export first.cue -e a --out yaml 类型 与 “</description>
    </item>
    
    <item>
      <title>使用 Goland 设置 cuelang 的自动格式化</title>
      <link>https://wonderflow.info/posts/2020-11-02-goland-cuelang-format/</link>
      <pubDate>Mon, 02 Nov 2020 17:39:57 +0800</pubDate>
      
      <guid>https://wonderflow.info/posts/2020-11-02-goland-cuelang-format/</guid>
      <description>Goland 可以方便的通过自定义 file watchers 设置自动化 format culang 文件。 设置方法： 【Preferences】 =&amp;gt; 【File Watchers】 添加： File type 选择 Any Scope Pattern设置： file[*]:*.cue 。 Program 是 cue，这也要求你的 PATH 环境下有 cue 这个可执行文件。 Arguments参数设置： fmt $FilePath$ 输出文件： $FilePath$ 工作目录： $ProjectFileDir$ 然后点击 apply 生效就好了。</description>
    </item>
    
    <item>
      <title>OAM v1alpha2 新版：平衡标准与可扩展性</title>
      <link>https://wonderflow.info/posts/oam-v1alpha2/</link>
      <pubDate>Mon, 30 Mar 2020 21:54:33 +0800</pubDate>
      
      <guid>https://wonderflow.info/posts/oam-v1alpha2/</guid>
      <description>OAM Spec 经历了近 3 个月的迭代，v1alpha2 版本终于发布啦。新版本在坚持 OAM Spec 平台无关的基础上，整体变得更 Kubernetes 友好化，很大程度上平衡了标准与可扩展性，更好的支持 CRD。如果你已经编写了现成的 CRD Operator，可以平滑的接入到 OAM 体系中，并且享受到 OAM 模型的红利。 目前 OAM 已经成为了包括阿里、微软、Upbond、谐云等多家公司构建云产品的核心架构。他们通过 OAM 构建了“以应用为中心”、用户友好化的 Kubernetes PaaS；充分发挥 OAM 的标准化与可扩展性，实现 OAM 核心Controller的同时，快速接入了已有的 Operator 能力；通过 OAM 横向打通多个模块，破除了原有 Operator 彼此孤立、无法复用的窘境。 了解 OAM 的背景及由来，可以参考文章《深度解读 - 阿里巴巴</description>
    </item>
    
    <item>
      <title>Heroku 的“得”与“失”</title>
      <link>https://wonderflow.info/posts/heroku/</link>
      <pubDate>Mon, 10 Feb 2020 21:58:54 +0800</pubDate>
      
      <guid>https://wonderflow.info/posts/heroku/</guid>
      <description>&lt;p&gt;2011年，Heroku 的联合创始人  Adam Wiggins 根据针对上百万应用托管和运维的经验，发布了著名的 &lt;a href=&#34;https://12factor.net/&#34;&gt;“十二要素应用宣言（The Twelve-Factor App）”&lt;/a&gt;。不知那时候他们有没有想到，这份宣言会在今后数年时间里，成为 SaaS 应用开发的启蒙书。同时也奠定了 Heroku 在 PaaS 领域的地位，成为了云上应用开发规范化的基石。&lt;/p&gt;
&lt;p&gt;Heroku 无疑是一家伟大的公司，它关注应用与开发者，“以应用为中心”的理念让我们至今受益。然而在过去这一两年里，我们看到许多 Heroku 的用户开始寻找别的选择。这不禁让我们好奇，站在“云原生”如火如荼的今天回望过去，Heroku 的“得”与“失”究竟在哪里？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes 会不会“杀死” DevOps？</title>
      <link>https://wonderflow.info/posts/2019-12-31-k8s-kill-paas/</link>
      <pubDate>Tue, 31 Dec 2019 19:41:43 +0800</pubDate>
      
      <guid>https://wonderflow.info/posts/2019-12-31-k8s-kill-paas/</guid>
      <description>DevOps 这个概念最早是在 2007 年提出的，那时云计算基础设施的概念也才刚刚提出没多久，而随着互联网的逐渐普及，应用软件的需求爆发式增长，软件开发的理念也逐渐从瀑布模型（waterfall）转向敏捷开发（agile）。传统的软件交付模式（应用开发人员专注于软件开发、IT运维人员负责将软件部署到服务器运行），再也无法满足互联网软件快速迭代的需求。于是，DevOps 作为一种打破研发和运维之间隔阂、加快软件交付流程、提高软件交付质量的文化理念和最佳实践逐渐普及至今。 DevOps 的现状 DevOps 的流行得益于业界对于应用软件敏捷开发、高质量交付的诉求，所以为开发和运维开辟了一块“公共的空间”，让双方可以在这里紧密合作。那时软件研发依旧</description>
    </item>
    
    <item>
      <title>数据收集工具的设计与最佳实践</title>
      <link>https://wonderflow.info/posts/2017/10/18/shu-ju-shou-ji-gong-ju-de-she-ji-yu-zui-jia-shi-jian/</link>
      <pubDate>Wed, 18 Oct 2017 10:48:47 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2017/10/18/shu-ju-shou-ji-gong-ju-de-she-ji-yu-zui-jia-shi-jian/</guid>
      <description>&lt;p&gt;【本文首先发布于InfoQ】&lt;a href=&#34;http://www.infoq.com/cn/articles/data-collection-tool&#34;&gt;《数据收集工具的设计与最佳实践》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;笔者之前在&lt;a href=&#34;http://www.infoq.com/cn/articles/qiniu-big-data-platform-evolution-and-analysis&#34;&gt;《七牛大数据平台的演进与大数据分析实践》&lt;/a&gt;中提到了已经开源的数据收集工具logkit。本文将深入介绍数据收集的设计思路以及大数据收集背后的细节，为大家提供大数据实战中第一步数据采集的最佳实践。&lt;/p&gt;
&lt;h2 id=&#34;数据收集工具对比&#34;&gt;数据收集工具对比&lt;/h2&gt;
&lt;p&gt;目前社区就不乏存在大量优秀的数据收集工具，如有名的Elastic Stack(Elasticsearch、Logstash、Kibana)中的&lt;a href=&#34;https://github.com/elastic/logstash&#34;&gt;Logstash&lt;/a&gt;；CNCF基金会里面有名的&lt;a href=&#34;https://github.com/fluent/fluentd&#34;&gt;Fluentd&lt;/a&gt;；InfluxData公司TICK Stack中的&lt;a href=&#34;https://github.com/influxdata/telegraf&#34;&gt;Telegraf&lt;/a&gt;；Google 出品为Kubernetes定制的&lt;a href=&#34;https://github.com/google/cadvisor&#34;&gt;cAdvisor&lt;/a&gt;；Apache基金会中的顶级项目&lt;a href=&#34;https://github.com/apache/flume&#34;&gt;Flume&lt;/a&gt;。除了早期诞生的诸如Fluentd、Flume等项目，其他项目都是为特定的平台业务定制而成，然后在随后的开源中不断进化，变得更为通用。所以针对特定业务，量身定制一款数据收集工具，是一个较为普遍的需求，也是出现如此众多“轮子”的主要原因。&lt;/p&gt;
&lt;p&gt;让我们先来看看这几种知名开源数据收集工具有哪些特点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go包管理的前世今生</title>
      <link>https://wonderflow.info/posts/2017/09/07/gobao-guan-li-de-qian-shi-jin-sheng/</link>
      <pubDate>Thu, 07 Sep 2017 10:19:43 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2017/09/07/gobao-guan-li-de-qian-shi-jin-sheng/</guid>
      <description>原文首发自InfoQ，《Go包管理的前世今生》 说实话，Golang对一个新人真的挺不友善的，因为一上手要了解的概念。你看人家Java，上来一个项目mvn install一下就完事了，赶紧利落。但是Golang就麻烦了，你得先了解什么是GOPATH。我当年刚接触Golang真正开始做项目的时候，只知道按要求配置环境变量，对GOPATH真正理解可能都是好几个月以后的事情了。说白了，还是因为懒。真正做项目的人，有多少有耐心砍柴磨刀，出现一个东西就研究半天啊，我们只是想要Copy-Paste而已。 但是不得不承认，对于今天讨论的Go包管理的话题，如果你想理解Golang的包管理机制，连GOPATH都不想充</description>
    </item>
    
    <item>
      <title>七牛大数据平台的演进与大数据分析实践</title>
      <link>https://wonderflow.info/posts/2017/08/18/qi-niu-da-shu-ju-ping-tai-de-yan-jin-yu-da-shu-ju-fen-xi-shi-jian/</link>
      <pubDate>Fri, 18 Aug 2017 10:43:17 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2017/08/18/qi-niu-da-shu-ju-ping-tai-de-yan-jin-yu-da-shu-ju-fen-xi-shi-jian/</guid>
      <description>&lt;p&gt;原文首发自InfoQ，&lt;a href=&#34;http://www.infoq.com/cn/articles/qiniu-big-data-platform-evolution-and-analysis&#34;&gt;《七牛大数据平台的演进与大数据分析实践》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://ou3jgt6kj.bkt.clouddn.com/Picture1.png&#34; alt=&#34; 图1大数据生态体系&#34;&gt;图 1 大数据生态体系&lt;/p&gt;
&lt;p&gt;看着图 1 大家可能会感到熟悉，又或者会觉得部分有些陌生，这是一张汇集了目前大数据生态下大多数成熟组件的架构图。众所周知，大数据生态很复杂，对于个人来说，要全部学会可能要花费好几年时间。而对于企业来说，要最大程度发挥其价值，构建一个成熟稳定、功能多样的大数据平台，期间花费的时间以及人力成本着实难以估量，更何况还需要考虑持续维护的问题。这就是七牛的Pandora大数据平台灵感的来源，我们构建一个大数据平台，作为产品提供给用户，快速帮助用户挖掘数据价值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker背后的容器管理——libcontainer深度解析</title>
      <link>https://wonderflow.info/posts/2015/06/03/docker-container-management-libcontainer-depth-analysis/</link>
      <pubDate>Wed, 03 Jun 2015 13:21:26 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2015/06/03/docker-container-management-libcontainer-depth-analysis/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文首发于InfoQ &lt;a href=&#34;http://www.infoq.com/cn/articles/docker-container-management-libcontainer-depth-analysis&#34;&gt;http://www.infoq.com/cn/articles/docker-container-management-libcontainer-depth-analysis&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;libcontainer 是Docker中用于容器管理的包，它基于Go语言实现，通过管理&lt;code&gt;namespaces&lt;/code&gt;、&lt;code&gt;cgroups&lt;/code&gt;、&lt;code&gt;capabilities&lt;/code&gt;以及文件系统来进行容器控制。你可以使用libcontainer创建容器，并对容器进行生命周期管理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;容器是一个可管理的执行环境，与主机系统共享内核，可与系统中的其他容器进行隔离。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在2013年Docker刚发布的时候，它是一款基于LXC的开源容器管理引擎。把LXC复杂的容器创建与使用方式简化为Docker自己的一套命令体系。随着Docker的不断发展，它开始有了更为远大的目标，那就是反向定义容器的实现标准，将底层实现都抽象化到libcontainer的接口。这就意味着，底层容器的实现方式变成了一种可变的方案，无论是使用namespace、cgroups技术抑或是使用systemd等其他方案，只要实现了libcontainer定义的一组接口，Docker都可以运行。这也为Docker实现全面的跨平台带来了可能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker背后的内核知识——cgroups资源限制</title>
      <link>https://wonderflow.info/posts/2015/04/22/cgroups/</link>
      <pubDate>Wed, 22 Apr 2015 10:05:38 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2015/04/22/cgroups/</guid>
      <description>&lt;p&gt;原文首发自InfoQ，&lt;a href=&#34;http://www.infoq.com/cn/articles/docker-kernel-knowledge-cgroups-resource-isolation&#34;&gt;《Docker背后的内核知识——cgroups资源限制》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;摘要&#34;&gt;摘要&lt;/h2&gt;
&lt;p&gt;当我们谈论Docker时，我们常常会聊到Docker的实现方式。很多开发者都会知道，Docker的本质实际上是宿主机上的一个进程，通过namespace实现了资源隔离，通过cgroup实现了资源限制，通过UnionFS实现了Copy on Write的文件操作。但是当我们再深入一步的提出，namespace和cgroup实现细节时，知道的人可能就所剩无几了。&lt;a href=&#34;http://www.sel.zju.edu.cn/&#34;&gt;浙江大学SEL/VLIS实验室&lt;/a&gt;的&lt;a href=&#34;http://wonderflow.github.io&#34;&gt;孙健波&lt;/a&gt;同学在docker基础研究工作中着重对内核的cgroup技术做了细致的分析和梳理，希望能对读者深入理解Docker有所帮助&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;p&gt;上一篇中，我们了解了Docker背后使用的资源隔离技术namespace，通过系统调用构建一个相对隔离的shell环境，也可以称之为一个简单的“容器”。本文我们则要开始讲解另一个强大的内核工具——cgroups。他不仅可以限制被namespace隔离起来的资源，还可以为资源设置权重、计算使用量、操控进程启停等等。在介绍完基本概念后，我们将详细讲解Docker中使用到的cgroups内容。希望通过本文，让读者对Docker有更深入的了解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker背后的内核知识——Namespace资源隔离</title>
      <link>https://wonderflow.info/posts/2015/03/18/docker-namespace/</link>
      <pubDate>Wed, 18 Mar 2015 08:36:27 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2015/03/18/docker-namespace/</guid>
      <description>&lt;p&gt;孙健波&lt;/p&gt;
&lt;p&gt;Docker这么火，喜欢技术的朋友可能也会想，如果要自己实现一个资源隔离的容器，应该从哪些方面下手呢？也许你第一反应可能就是&lt;code&gt;chroot&lt;/code&gt;命令，这条命令给用户最直观的感觉就是使用后根目录&lt;code&gt;/&lt;/code&gt;的挂载点切换了，即文件系统被隔离了。然后，为了在分布式的环境下进行通信和定位，容器必然需要一个独立的IP、端口、路由等等，自然就想到了网络的隔离。同时，你的容器还需要一个独立的主机名以便在网络中标识自己。想到网络，顺其自然就想到通信，也就想到了进程间通信的隔离。可能你也想到了权限的问题，对用户和用户组的隔离就实现了用户权限的隔离。最后，运行在容器中的应用需要有自己的&lt;code&gt;PID&lt;/code&gt;,自然也需要与宿主机中的&lt;code&gt;PID&lt;/code&gt;进行隔离。&lt;/p&gt;
&lt;p&gt;由此，我们基本上完成了一个容器所需要做的六项隔离，Linux内核中就提供了这六种namespace隔离的系统调用，如下表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Namespace&lt;/th&gt;
&lt;th&gt;系统调用参数&lt;/th&gt;
&lt;th&gt;隔离内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;UTS&lt;/td&gt;
&lt;td&gt;CLONE_NEWUTS&lt;/td&gt;
&lt;td&gt;主机名与域名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IPC&lt;/td&gt;
&lt;td&gt;CLONE_NEWIPC&lt;/td&gt;
&lt;td&gt;信号量、消息队列和共享内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PID&lt;/td&gt;
&lt;td&gt;CLONE_NEWPID&lt;/td&gt;
&lt;td&gt;进程编号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network&lt;/td&gt;
&lt;td&gt;CLONE_NEWNET&lt;/td&gt;
&lt;td&gt;网络设备、网络栈、端口等等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mount&lt;/td&gt;
&lt;td&gt;CLONE_NEWNS&lt;/td&gt;
&lt;td&gt;挂载点（文件系统）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User&lt;/td&gt;
&lt;td&gt;CLONE_NEWUSER&lt;/td&gt;
&lt;td&gt;用户和用户组&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Dive into etcd</title>
      <link>https://wonderflow.info/posts/2015/02/02/dive-into-etcd/</link>
      <pubDate>Mon, 02 Feb 2015 10:57:55 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2015/02/02/dive-into-etcd/</guid>
      <description>&lt;h1 id=&#34;etcd从应用场景到实现原理的全方位解读&#34;&gt;etcd：从应用场景到实现原理的全方位解读&lt;/h1&gt;
&lt;p&gt;随着CoreOS和Kubernetes等项目在开源社区日益火热，它们项目中都用到的etcd组件作为一个高可用、强一致性的服务发现存储仓库，渐渐为开发人员所关注。在云计算时代，如何让服务快速透明地接入到计算集群中，如何让共享配置信息快速被集群中的所有机器发现，更为重要的是，如何构建这样一套高可用、安全、易于部署以及响应快速的服务集群，已经成为了迫切需要解决的问题。etcd为解决这类问题带来了福音，本章将从etcd的应用场景开始，深入解读etcd的实现方式，以供开发者们更为充分地享用etcd所带来的便利。&lt;/p&gt;
&lt;h2 id=&#34;1-etcd经典应用场景&#34;&gt;1 etcd经典应用场景&lt;/h2&gt;
&lt;p&gt;etcd是什么？很多人对这个问题的第一反应可能是，它是一个键值存储仓库，却没有重视官方定义的后半句，用于配置共享和服务发现。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A highly-available key value store for shared configuration and service discovery.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上，etcd作为一个受到Zookeeper与doozer启发而催生的项目，除了拥有与之类似的功能外，更具有以下4个特点{![引自Docker官方文档]}。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我的二零一四</title>
      <link>https://wonderflow.info/posts/2014/12/31/e68891e79a84e4ba8ce99bb6e4b880e59b9b/</link>
      <pubDate>Wed, 31 Dec 2014 16:08:31 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/12/31/e68891e79a84e4ba8ce99bb6e4b880e59b9b/</guid>
      <description>&lt;p&gt;说起来2014就这么过去了，站在年月的末尾回望这一年传说中的本命，真是有点伤感。娄老师在QQ空间里说：“QQ上都是老朋友了，所以可以放心的把自己细致的像日记一样的计划列出来让大家看，哪怕完不成也不怕被笑，反倒可以起个监督的效果”。我觉得这个想法也同样适用于我，那么就对着年初的计划讲讲这一年吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cf-release结构解析</title>
      <link>https://wonderflow.info/posts/2014/12/17/cf-releasee7bb93e69e84e8a7a3e69e90/</link>
      <pubDate>Wed, 17 Dec 2014 08:08:26 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/12/17/cf-releasee7bb93e69e84e8a7a3e69e90/</guid>
      <description>1. 制作时的cf-release结构解析 此处指的release统一为CloudFoundry官方给出的cf-release，不做修改。 1.1. 通过载入cf-release文件夹下config/final.yml文件，获得需要下载release文件的远程服务器网址，默认使用的提供商是s3，地址是：blob.cfblob.com 1.2. 通过config/blobs.yml，可以得到所有blobs的object_id，通过服务器地址+object_id拼接的字符串即可下载到相对应的blob内容。 1.3. 默认存储的位置为cf-release/.blobs，存储的文件名为sha1值，下载完成后会在cf-release/bl</description>
    </item>
    
    <item>
      <title>未来的某一天——普适计算展望小作业</title>
      <link>https://wonderflow.info/posts/2014/11/13/e69caae69da5e79a84e69f90e4b880e5a4a9-e699aee98082e8aea1e7ae97e5b195e69c9be5b08fe4bd9ce4b89a/</link>
      <pubDate>Thu, 13 Nov 2014 01:24:20 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/11/13/e69caae69da5e79a84e69f90e4b880e5a4a9-e699aee98082e8aea1e7ae97e5b195e69c9be5b08fe4bd9ce4b89a/</guid>
      <description>今天突然翻邮箱，发现一年前修读“普适计算”课程的时候还写过这么一篇小东西，看看还蛮有趣的，就发出来跟大家分享。以下是正文: 那天下午，小赵在普适计算的课上，迷迷糊糊的打着盹就掉进了梦乡。在梦里，他仿佛又置身在不久前，某次见导师的忐忑情景中。 “潘老师来电，赵先生，请问您是否接听！”“潘老师来电，请问……”一个陌生的声音在身边响起，可是办公室里一个人也没有。再仔细一听，声音竟然是从办公室某个角落的音响里传来的。就在那个声音越来越微弱快要停下的时候，小赵忙喊道：“接听！” “喂，小赵啊，都已经到了啊，稍微等一下，我也很快就到了。”耳边又传来导师那熟悉的声音。小赵想起来，今天是来给导师介绍他们公司最新研制</description>
    </item>
    
    <item>
      <title>touching moments</title>
      <link>https://wonderflow.info/posts/2014/11/09/touching-moments/</link>
      <pubDate>Sun, 09 Nov 2014 16:29:55 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/11/09/touching-moments/</guid>
      <description>今天是闰九月十八，闰九月这种日子据说要一个世纪才会出现一次。我想，出生在这样日子里的孩子，如果像我一样固执的过阴历生日，那么一辈子就只有一岁啦。这就是传说中的永远年轻了吧。 在这样特殊的日子，似乎就该写点文字来纪念一下。但是转念一想，要是没有平日里的那些稀松平常，又怎么会衬托出今天的这种奇妙特殊呢。所以，今天就写点往日记录下的感悟吧。 喝茶 原来我有很长一段时间，在公司喝好的茶，在宿舍喝差的，是无形中给自己努力工作带来了一丝激励，让我对每一天去公司上班有所期待。 想不到这个道理，直到喝完了所有的茶叶，我才明白。所以，自从搬回实验室以后，我又开始了这样的安排。 驾驶员 有的路别人说是错的给你纠正过来你不以为</description>
    </item>
    
    <item>
      <title>十月的尾巴</title>
      <link>https://wonderflow.info/posts/2014/10/31/e58d81e69c88e79a84e5b0bee5b7b4/</link>
      <pubDate>Fri, 31 Oct 2014 14:15:32 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/10/31/e58d81e69c88e79a84e5b0bee5b7b4/</guid>
      <description>本来今天这篇日志准备用“社交减肥”这四个字做题目的，但是转念一想这样实在太高调了。一定会招来各种像我这样常年寻找减肥良方而不得的人满怀希冀的点进来，结果发现这狗屁不通的内容而对我嗤之以鼻。然后发现今天不仅是周五，还是十月的尾巴，然后就愉快的定下来这个标题。但是今天的主题，确确实实就是社交减肥。 社交减肥这个新鲜词汇起初我是从champion那里听来的。那天他笑嘻嘻的告诉我，可以用这种方法减肥，通过社交的力量来监督自己减肥。然后我研究了一下社交减肥的起源，原来是2011年美国的科学家用小鼠做的一组对照试验。跟一大群同类生活在一起的小鼠饭量增加的同时，腹部脂肪还是减少了一半。然后研究人员就提出参加更</description>
    </item>
    
    <item>
      <title>Haproxy端口映射（client头中URL/HOST修改后转发）</title>
      <link>https://wonderflow.info/posts/2014/10/28/haproxye7abafe58fa3e698a0e5b084efbc88cliente5a4b4e4b8adurlhoste4bfaee694b9e5908ee8bdace58f91efbc89/</link>
      <pubDate>Tue, 28 Oct 2014 09:03:56 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/10/28/haproxye7abafe58fa3e698a0e5b084efbc88cliente5a4b4e4b8adurlhoste4bfaee694b9e5908ee8bdace58f91efbc89/</guid>
      <description>CloudFoundry是对域名强依赖的云计算集群，没有域名的话几乎无法访问。但是域名备案等事宜所耗时间较长，在上线较为紧急的情况下，就需要实现直接通过“IP+端口”的形式，在公网访问CF集群上部署的APP。 解决方案 配置两层Haproxy，第一层的Haproxy与公网地址绑定。 对第一层的Haproxy进行配置，把外部通过IP+PORT访问的地址映射到后端第二层Haproxy，并把其访问的http Head修改，把Host字段改成能被Cloudfoundry接受的url字符串。 第二层Haproxy就跟CloudFoundry官方配置相同，作为负载均衡把流量导向下层多个gorouter。 Haprox</description>
    </item>
    
    <item>
      <title>《程序员修炼之道》的笔记</title>
      <link>https://wonderflow.info/posts/2014/10/24/e3808ae7a88be5ba8fe59198e4bfaee782bce4b98be98193e3808be79a84e7ac94e8aeb0/</link>
      <pubDate>Fri, 24 Oct 2014 13:50:30 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/10/24/e3808ae7a88be5ba8fe59198e4bfaee782bce4b98be98193e3808be79a84e7ac94e8aeb0/</guid>
      <description>老样子：印象笔记链接 责任：Provide Options, Don’t Make Lame Excuses. 什么是负责？就是在出了问题时，要提供各种选择，而不是找借口。不要说事情做不到；要说明能够做什么来挽回局面。 软件的熵：Don’t Live with Broken Windows. 不要留着“破窗户”（低劣的设计、错误的决策、糟糕的代码）不修。发现一个修一个，如果没有时间整理，就把出问题的代码放在注释里或者显示未实现。 足够好的软件：Make Quality a Requirements Issue 让用户参与权衡质量的需求 知识资产：Invest Regularly in Your Knowledge Portfolio 经营你的知识资产: 定期投资：尽管每次投资量小，但是要保持习惯 多元化：你知道的不同的事情越多，你就越有价值。你掌握的技术越多，你就越能更好地进行调整，赶上变化。 管理风险：不要把所有的技术</description>
    </item>
    
    <item>
      <title>北京container技术大会</title>
      <link>https://wonderflow.info/posts/2014/10/22/e58c97e4baaccontainere68a80e69cafe5a4a7e4bc9a/</link>
      <pubDate>Wed, 22 Oct 2014 03:31:08 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/10/22/e58c97e4baaccontainere68a80e69cafe5a4a7e4bc9a/</guid>
      <description>可以看我的印象笔记共享，格式更加漂亮一些。 此次去北京参加的container大会，主办方为csdn，实际会议主持为docker中文社区创始人马全一。会议时间为一天，从早上九点开始一直到晚上六点结束，共包含16个主题。虽说是container大会，但实际上基本围绕docker展开。期间也讲到了社区较为火热的IaaS平台openstack，以及PaaS平台Cloudfoundry，总的来说收获颇丰。 会议流程： 以下我将按每个有收获的主题分别讲述我的思考和总结。 Jrome（Hello Container Ops） 正如会议流程所示，第一个讲的是docker的开发工程师Jrome。我觉得他讲述了以下两点比较有意思： 1. docker con</description>
    </item>
    
    <item>
      <title>白兔和月亮</title>
      <link>https://wonderflow.info/posts/2014/09/30/e799bde58594e5928ce69c88e4baae/</link>
      <pubDate>Tue, 30 Sep 2014 16:13:18 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/09/30/e799bde58594e5928ce69c88e4baae/</guid>
      <description>我常常喜欢患得患失，忧心忡忡。也常常喜欢跟别人讲起周国平这则寓言，《白兔与月亮》 在众多的兔姐妹中，有一只白兔独具审美的慧心。她爱大自然的美，尤爱皎洁的月色。每天夜晚，她都来到林中草地，或是无忧无虑地嬉戏，或是心旷神怡地赏月。她不愧是赏月的行家，在她的眼里，月的阴晴圆缺无不各具风韵。 于是，诸神之王召见这只白兔，向她宣布了一个慷慨的决定： “万物均有所归属。从今以后，月亮归属于你，因为你的赏月之才举世无双。 ” 白兔仍然夜夜到林中草地赏月。可是，说也奇怪，从前的闲适心情一扫而光了，脑中只绷着一个念头：“这是我的月亮！”她牢牢盯着月亮，就像财主盯着自己的金窖。乌云蔽月，她便紧张不安，唯恐宝藏丢失；满月缺损</description>
    </item>
    
    <item>
      <title>九月大事记</title>
      <link>https://wonderflow.info/posts/2014/09/22/e4b99de69c88e5a4a7e4ba8be8aeb0/</link>
      <pubDate>Mon, 22 Sep 2014 14:26:21 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/09/22/e4b99de69c88e5a4a7e4ba8be8aeb0/</guid>
      <description>上次那篇《星斗满天》写完，老秦留言说，“生活充满希望与活力大概就是星斗满天了呢。” 这真是说出了我的心声啊。但是转念一想，自己最近老是无病呻吟，觉得生活没有热情没有期待，平凡平淡到写文章也只能像流水账一样平铺直叙，实在是对不起那个题目，就赶紧换下了。 只是人难免要表达啊，遇到不开心的事情说出来那叫发泄，遇到开心的事情说出来那叫分享。那么这个中间态怎么定义呢？这让我想起来跟学妹的聊天。 “最近挺好的啊，没什么不开心的事。” “那为什么不能是最近很不好呢，因为没什么开心事。” 当时我竟是无言以对，现在想想，我倒有点认同她的观点了。确实是没什么开心事就不开心。不过还好，我感觉最近开心事挺多。 教师节那天，师兄弟</description>
    </item>
    
    <item>
      <title>星斗满天（三）</title>
      <link>https://wonderflow.info/posts/2014/09/03/e6989fe69697e6bba1e5a4a9efbc88e4b889efbc89/</link>
      <pubDate>Wed, 03 Sep 2014 15:42:34 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/09/03/e6989fe69697e6bba1e5a4a9efbc88e4b889efbc89/</guid>
      <description>最近我一直盼星星盼月亮，盼着杭州出现一个大晴天。这样，哪怕我翘一天班，不去公司实习，我也要把我们宿舍所有发霉的东西统统拿出去晒晒，好好杀一杀毒。可惜天不随人愿啊，在我盖着散发着霉味的被子到了第四天的今天时，天气依旧是要么早上大太阳，下午下雨；要么上午下大雨，下午大太阳。甚至有一天天气预报说要下雨，结果天晴了一天，让我懊悔不已没有晒被子的生活，结果傍晚开始下雨。让人哭笑不得。 然后我就明白了一个道理：不是我要晒被子，但天公不作美故意要天天下雨，而是天天下雨，才导致我要晒被子，才导致这个世界有了发霉这种事情。所以啊，我自然是盼不到好天气的了。再然后我就被自己想明白的这些给说服了，把开着除湿的空调关了</description>
    </item>
    
    <item>
      <title>2014.8去南京</title>
      <link>https://wonderflow.info/posts/2014/08/29/2014-8e58ebbe58d97e4baac/</link>
      <pubDate>Fri, 29 Aug 2014 05:30:11 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/08/29/2014-8e58ebbe58d97e4baac/</guid>
      <description>这两天去南京玩了一圈，一切皆是原来的模样~ 南京火车站因为青奥会的原因显得很气派，到处都是“南京欢迎您”的字样。 地铁到了孝陵卫依旧还是那样凉飕飕的，从一号门进去，一路一直走到活动室门口，就仿佛以往每次回学校的路途。每次回到南理工，不管有意还是无意，第一个经过要去转转的地方都是活动室。只是如今的活动室已经搬空了，倒是墙上还留着娄老师带来的那幅“自强不息”的书法。站在活动室门口，我想，以后每次我都会先来这里看看，直到它被拆掉。这里的回忆实在是太多。 一运被拆快三年了，新图书馆的轮廓也已建成，空地上的野草有的都长成了一颗颗小树，看来被这个和风沐雨的清凉夏日孕育的非常滋润。来到肃驰他们宿舍，三楼、独卫、阳</description>
    </item>
    
    <item>
      <title>读《活着》有感</title>
      <link>https://wonderflow.info/posts/2014/08/23/e8afbbe3808ae6b4bbe79d80e3808be69c89e6849f/</link>
      <pubDate>Sat, 23 Aug 2014 14:35:56 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/08/23/e8afbbe3808ae6b4bbe79d80e3808be69c89e6849f/</guid>
      <description>张艺谋根据余华的小说拍的电影《活着》被人广为赞誉，但实际，小说本身的内容比之电影，要更沉重、残酷、精彩的多。小说描述的是一个近在眼前的年代，发生的真实到近乎血腥的故事。 我很喜欢韩寒的这个序言： 其实这本书以前我也读过部分，但是那时候是不懂的，就像现在来读高中时通篇华丽辞藻微言大义的作文，老师给的分数再高，也只是流于表面。 而这个月，又有两个极为熟悉的亲戚朋友的父亲相继过世了，这让我无比真实的接近了这些生死之事。明白了这期间的沉重、深刻与严肃，甚至不知道安慰的词句该从何开始。我明白了那是一种旁人无法体会到的苦难、不舍和勇气。 所以无论是余华的原版小说《活着》，还是张艺谋的电影《活着》，里面都没有旁人对</description>
    </item>
    
    <item>
      <title>2014.8去上海</title>
      <link>https://wonderflow.info/posts/2014/08/10/2014-8e58ebbe4b88ae6b5b7/</link>
      <pubDate>Sun, 10 Aug 2014 16:30:50 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/08/10/2014-8e58ebbe4b88ae6b5b7/</guid>
      <description>此行去上海算是借着实验室参加cloudfoundry meetup的光，顺带看望了一把老朋友们，感受了一下前辈们在上海的生活。 不得不承认，上海真是一个繁华的都市。与杭州郁郁葱葱略带古朴的优雅诗意比起来，上海就是一座充斥着霓虹灯喧嚣的奢华世界，外乡人除了感概以外，其实很难真正消化其中的美。归根结底，没有多少零花钱的人们，往往只能成为来看热闹的拥挤人潮中的一员，显得有些寸步难行。 不过我没有在以上地方出没，只是听同去的伙伴说起了他们的感受，顺带记下一笔。 会一开完，我就匆忙赶去星姐他们的小窝了。那里算是个不错的地方了，每人一个房间，去除独卫外还算宽敞，此外还有一个布满灰尘的小客厅和一个连存放在柜子里的勺</description>
    </item>
    
    <item>
      <title>迟到</title>
      <link>https://wonderflow.info/posts/2014/08/02/e8bf9fe588b0/</link>
      <pubDate>Sat, 02 Aug 2014 09:16:00 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/08/02/e8bf9fe588b0/</guid>
      <description>去年七月五号来的杭州，今年暑假回家休息的日子也是七月五号，我也没有刻意去选择这样一个巧合，冥冥中凑成一个轮回。本该在那天写篇博客的。如今一转眼，又是一个月过去了。再来写，怕是迟了，但是迟到总比不到好吧。 老妈说，我这么久不更新博客，关注我博客的人该会失望的吧。我对她呵呵一笑，想着会有多少人是因为我的生活而非上面记叙的资料而看我这个博客的呢。有时候我也会想，自己的生活写在这里，别人是否真的愿意看。所以有时候我会更愿意打开印象笔记，在其中默默的写下一些自己的想法，而不是发到博客上来。其实我也明白，老妈想要读懂自己的儿子,却找不到地方去了解，会感到焦急。 不过老妈是对的，我该时常在这里写点什么，给关心我</description>
    </item>
    
    <item>
      <title>Cloud Foundry 运维入门</title>
      <link>https://wonderflow.info/posts/2014/07/01/cloud-foundry-e8bf90e7bbb4e585a5e997a8/</link>
      <pubDate>Tue, 01 Jul 2014 06:05:03 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/07/01/cloud-foundry-e8bf90e7bbb4e585a5e997a8/</guid>
      <description>@(CF V2相关)[guide] 之前写过一个Guide for Cloud Foundry New Teamer。不过似乎已经有些过时，那会实验室主要是针对的CF v1进行的研究，现在已经全面进入V2时代了。所以更新一下关于CloudFoundry运维的一些内容。如果有时间也可再回头看看V1的那个帖子，希望能有所帮助。 部署 关于部署，目前使用的工具一般有两种，BOSH和cf_nise_installer。BOSH适用于集群安装，cf_nise_installer适用于单节点安装。下面主要以cf_nise_installer的安装方法为主描述部署的运维流程。 cf_nise_installer实际上就是一大堆shell脚本建立起来的项目，对sh</description>
    </item>
    
    <item>
      <title>《大数据时代》</title>
      <link>https://wonderflow.info/posts/2014/05/27/e3808ae5a4a7e695b0e68daee697b6e4bba3e3808b/</link>
      <pubDate>Tue, 27 May 2014 16:17:05 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/05/27/e3808ae5a4a7e695b0e68daee697b6e4bba3e3808b/</guid>
      <description>从古至今，无论是东方的神灵还是西方的巫师，人们都一直怀揣着想要预知未来的美好愿望。如今，大数据时代来临了，就像显微镜让人们观测到了微生物的世界一样，对大数据的收集、分析、处理给我们预知未来带来了极大的可能。 自从人类进入了信息时代，每十年都会出现一次巨大的技术革命。从1980年开始，信息技术的基础设施开始在各地搭建起来；1990年，个人电脑开始普及，各类桌面应用程序如雨后春笋般涌现；2000年，互联网普遍进入了人们的视野，上网慢慢变成了习惯，打开浏览器就能做你想做的事情；2010年，云时代的序幕业已拉开，移动互联网新兴，人们的数据在云端存储同步，随时随地都可以访问，你可以使用的设备也变得五花八门</description>
    </item>
    
    <item>
      <title>星斗满天（二）</title>
      <link>https://wonderflow.info/posts/2014/04/10/e6989fe69697e6bba1e5a4a9efbc88e4ba8cefbc89/</link>
      <pubDate>Thu, 10 Apr 2014 15:59:48 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/04/10/e6989fe69697e6bba1e5a4a9efbc88e4ba8cefbc89/</guid>
      <description>最近杭州的天气又开始变差了，在朦朦胧胧的操场上跑步忍不住就会想，什么时候呼吸一口新鲜空气都变得这么奢侈了呀。也许真有一天会应了小学里面的某篇课文，氧气也变成了商品，甚至有钱也很难买到。不过反过来想，以前又怎么会明白，看到一个可以跑步的好天气，也会有一天的好心情呢。 其实，看到满天星斗的时候多数是在跑步，很享受那种跑步时思考的感觉，会回忆起很多生活中的细节，想通一些事情，不管对不对，都会释然。所以有时候很难分清楚，跑步完的轻松是来自心理的释然还是生理的疲惫。不过这些并不重要，重要的是锻炼身体的好处确确实实可以感受到。 [本文已结束] 最近越来越后悔选了“音乐素质教育”这个课了，老师强迫我们做很多事情，</description>
    </item>
    
    <item>
      <title>版本控制与工作流</title>
      <link>https://wonderflow.info/posts/2014/04/10/e78988e69cace68ea7e588b6e4b88ee5b7a5e4bd9ce6b581/</link>
      <pubDate>Thu, 10 Apr 2014 14:28:04 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/04/10/e78988e69cace68ea7e588b6e4b88ee5b7a5e4bd9ce6b581/</guid>
      <description>之前写过一篇git用法的文章，git pocket阅读记录。最近软件工程课要做报告，就又把这些内容整理了一下。 画这些PPT上的图真是一个超级耗时的工作啊，有兴趣的看看吧。 主要讲的是git原理以及分支模型(branching model)相关的内容。 版本控制报告PPT</description>
    </item>
    
    <item>
      <title>剧本：女王诉杜德利与史蒂芬案</title>
      <link>https://wonderflow.info/posts/2014/04/02/e589a7e69cacefbc9ae5a5b3e78e8be8af89e69d9ce5beb7e588a9e4b88ee58fb2e89282e88aace6a188/</link>
      <pubDate>Wed, 02 Apr 2014 14:21:37 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/04/02/e589a7e69cacefbc9ae5a5b3e78e8be8af89e69d9ce5beb7e588a9e4b88ee58fb2e89282e88aace6a188/</guid>
      <description>演员表：法官、书记员，控方律师、被告方律师、船长杜德利、大副史蒂芬、水手布鲁克。 【法官】（始终保持严肃端庄）：请大家保持安静，现在开庭。请书记员简述案件内容。 【书记员】：好的，法官大人。案件发生于1884年7月5日，一艘游船在南大西洋离岸1300英里处失事，船上共有四人，分别是船长杜德利、大副史蒂芬、水手布鲁克以及当时作为船舱服务员的17岁孤儿帕克。在缺少淡水和食物的第20天时，杜德利在史蒂芬同意、布鲁克斯的反对下杀死男孩帕克，四天后，三个幸存者得救。由此，船长杜德利、大副史蒂芬和水手布鲁克被指控犯有故意杀人罪以及侮辱尸体罪。 【法官】：好的，那么现在请控方代表发言。 【控方律师】：被害人帕克是一</description>
    </item>
    
    <item>
      <title>星斗满天（一）</title>
      <link>https://wonderflow.info/posts/2014/03/22/e6989fe69697e6bba1e5a4a9efbc88e4b880efbc89/</link>
      <pubDate>Sat, 22 Mar 2014 16:52:14 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/03/22/e6989fe69697e6bba1e5a4a9efbc88e4b880efbc89/</guid>
      <description>跑步的路上，偶尔抬头一看天，才发现久违的漫天繁星。果然春季就这么莫名其妙的如约而至，仿佛前一秒还是冬天、后一秒就变成了夏天，然后才出现了春天，对，就是这么的莫名其妙。 其实春天来的还是很热烈的，从植物园门口川流不息的行人以及周边有名气的小饭店门口都坐满了等待落座的客人就可以看出来。然后就组织了一下爬山的班级活动，虽然成行的只有四人，但是我们从老和山一路向北，将军山、灵峰山、美女山，一直到最后的北高峰。然后下山，在法华寺周围的小村子里找了一家名叫“老二川菜馆”的饭店，饭店虽小，但是味道非常好，很是地道。我想在经过那么长时间的运动后饱餐一顿实在是一种非常幸福的感觉，虽然我知道这跟我的减肥计划又越走越</description>
    </item>
    
    <item>
      <title>为什么选择Bosh而不用Puppet/Chef</title>
      <link>https://wonderflow.info/posts/2014/03/17/e4b8bae4bb80e4b988e98089e68ba9boshe8808ce4b88de794a8puppetchef/</link>
      <pubDate>Mon, 17 Mar 2014 06:44:24 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/03/17/e4b8bae4bb80e4b988e98089e68ba9boshe8808ce4b88de794a8puppetchef/</guid>
      <description>总的来说，Puppet/Chef是配置管理（Configration Management）工具，Bosh是云管理（Cloud Orchestration）工具。 Bosh的功能包含了Puppet/Chef所有的功能，并且Bosh把IaaS和PaaS的管理工作结合了起来并且实现了自动化，节省了大量的工作。但是Bosh需要IaaS层提供API，并且需要专门为API编写Bosh适配的CPI（Cloud Provider Interface），故而部署和使用的要求较高。 与此同时，Puppet/Chef工具自2000年起就已开始被广泛使用，其标准化的配置流程也渐渐成为了业界标准。因为其小巧灵活的特性，所以使用要求较低。与Bo</description>
    </item>
    
    <item>
      <title>碎片知识的管理</title>
      <link>https://wonderflow.info/posts/2014/03/15/e7a28ee78987e79fa5e8af86e79a84e7aea1e79086/</link>
      <pubDate>Sat, 15 Mar 2014 15:24:35 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/03/15/e7a28ee78987e79fa5e8af86e79a84e7aea1e79086/</guid>
      <description>其实我今天就是想推荐一下印象笔记这个工具而已。 平时生活中经常会出现这样一个场景，脑海中想起有个资料在哪里见过，想要再找出来参考一下，就是想不起来在哪里见到。这个时候会想，要是在什么地方有个备份，可以检索一下就好了。对的，印象笔记就是提供了这样一个地方。 下面这些场景是我经常用到印象笔记的地方，也可以说碎片知识收集的场景。 想起一个什么事情要记录下来，可以像便签一样使用它，同时还可以设置邮件定时提醒。 看到一个很有用的网页，根据这个网页内容的价值使用印象笔记·剪藏的全文或部分剪辑可以轻松的把这个网页收藏起来。 想写一篇Markdown格式的文章保存在印象笔记里，可以使用马克飞象轻松的编辑格式漂亮的文章，</description>
    </item>
    
    <item>
      <title>AppleScript基本语法</title>
      <link>https://wonderflow.info/posts/2014/02/28/applescripte59fbae69cace8afade6b395/</link>
      <pubDate>Fri, 28 Feb 2014 14:42:37 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/02/28/applescripte59fbae69cace8afade6b395/</guid>
      <description>在池老板写的《mactalk人生元编程》中了解到applescript这个东西，在徐宥博客上也看到过类似的介绍，那天路过图书馆，看到这本书，就突然来了兴致。 今天下决心花了一个晚上的时间好好了解了一下。最后发现这是个悲伤的故事。╮(╯▽╰)╭ 行 applescript是一种基于行的语言，不需要分号只有的分隔符，指令间以行结束符区分。 {% codeblock %} set x to 1 copy x + 1 to y {% endcodeblock %} 连接符 Option+Return产生连接符，类似C/C++中的“\”，为了让代码可以换行接着写 注释 单行注释就是连续两个斜杠 {% codeblock %} set a to 1 -- this is a comment {% endcodeblock %} 多行注释分界符是“(” “)” {% codeblock %} set a to 1 (* we are all ; comments. *) {% endcodeblock %} 执行结果 每一个有效执行的</description>
    </item>
    
    <item>
      <title>用Markdown写文章</title>
      <link>https://wonderflow.info/posts/2014/02/28/e794a8markdowne58699e58d9ae5aea2/</link>
      <pubDate>Fri, 28 Feb 2014 05:17:10 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/02/28/e794a8markdowne58699e58d9ae5aea2/</guid>
      <description>最近喜欢上了用Markdown写文章的感觉，专注于内容，自然而然的格式处理，很方便，大方而整洁。 Markdown使用最多的地方就是GitHub的README.md和stackoverflow了，以前一直想用，但是想想还要学Markdown语法，真麻烦。后来觉得应该要接受新事物，就咬牙去学，没想到，半小时就全学会了，因为Markdown的语法实在太简单了。感兴趣的话可以查看一下这个Markdown语法手册，非常简短。 可惜WordPress对Markdown的支持依旧不够完善，所以很多之前的文章你们看到的代码就变成了非常难看的朴素文字，我把原先的代码高亮插件关掉了。（因为如果开起来你会看到一大堆C</description>
    </item>
    
    <item>
      <title>Cloud_Controller_NG源码阅读记录</title>
      <link>https://wonderflow.info/posts/2014/02/28/cloud_controller_nge6ba90e7a081e99885e8afbbe8aeb0e5bd95/</link>
      <pubDate>Fri, 28 Feb 2014 04:14:33 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/02/28/cloud_controller_nge6ba90e7a081e99885e8afbbe8aeb0e5bd95/</guid>
      <description>Cloud_Controller_NG源码阅读记录 @(CC阅读)[cloud controller] by wonderflow Cloud_Controller_NG就是cloud controller next generation的意思。即Cloud Foundry 平台用来管理控制应用和服务的组件。 官方文档是这么解释CCNG的作用的： 维护一个包含应用、服务、配置信息的数据库(CCDB)。 在blobstore中存储应用的packages和droplets。 通过NATS和其他组件进行通信，包括Droplet Execution Agents (DEAs)、Service Gateways、和 Health Manager（HM）。 其他供用户调用的后端API。 阅读该组件源码，有助于从应用管理的视角理解cloudfoundry的运行</description>
    </item>
    
    <item>
      <title>学车末记</title>
      <link>https://wonderflow.info/posts/2014/02/09/e5ada6e8bda6e69cabe8aeb0/</link>
      <pubDate>Sun, 09 Feb 2014 09:35:39 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/02/09/e5ada6e8bda6e69cabe8aeb0/</guid>
      <description>很久以前写过一个学车首记，那会学车其实更应该说是考驾照。拿到驾照之后的将近一年时间，其实都不算会开车。不仅是因为平时在学校偶尔回家断断续续的开，更是因为始终有“教练陪驾”，没有独自担当。直到最近，才算是敢说自己会开车了，有好多心得，值得记录下来。 ****司机不仅要会开车，还得认路，但这些都不是最重要的，最重要的是副驾驶和后座上的那份责任。 有的路别人说是错的给你纠正过来你不以为意，直到自己开错了才意识到是真的错了。仔细想想，做人就是这样，有些事情，直到想说一声对不起的时候才发现已经不合时宜。 喇叭和大灯（远光灯）真的是让人心情极为烦躁的两个事物。在晚上的时候，无论是前车还是后车，谁开大灯都能让你眼</description>
    </item>
    
    <item>
      <title>《看见》与《在难搞的日子笑出声来》</title>
      <link>https://wonderflow.info/posts/2014/02/04/e3808ae79c8be8a781e3808be4b88ee3808ae59ca8e99abee6909ee79a84e697a5e5ad90e7ac91e587bae5a3b0e69da5e3808b/</link>
      <pubDate>Tue, 04 Feb 2014 07:28:38 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/02/04/e3808ae79c8be8a781e3808be4b88ee3808ae59ca8e99abee6909ee79a84e697a5e5ad90e7ac91e587bae5a3b0e69da5e3808b/</guid>
      <description>最近读了两本书，都是难得一见的好书，一本是柴静写的《看见》，一本是大鹏写的《在难搞的日子笑出声来》。 为什么说难得一见的好书呢？一是因为往年我读书其实不多，读的大多都是专业技术相关的书，要么就是YY小说，前者其实是为了谋生而读，后者未必能谈得上多好。二来，这两本书都是作者凝聚了多年生活阅历与智慧的结晶，里面有很多平凡但极具品味的内容，很有内涵。 说来也巧，两位作者的职业都决定了他们能见到很多人，看到很多事，去过很多地方，也吃过很多苦，所以自然而然也明白了很多道理，有很多丰富的阅历能够说给你听，耐人寻味。 [caption width=&amp;ldquo;231&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo;]柴静《看见》[/captio</description>
    </item>
    
    <item>
      <title>No Content Found</title>
      <link>https://wonderflow.info/posts/2014/01/21/847/</link>
      <pubDate>Tue, 21 Jan 2014 05:52:56 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/01/21/847/</guid>
      <description>github真是业界良心，学生可以凭借edu邮箱获得免费创建私有项目的权限了，真好。我帮忙宣传一下：https://github.com/edu</description>
    </item>
    
    <item>
      <title>年末不是结束，而是新的开始</title>
      <link>https://wonderflow.info/posts/2014/01/19/e5b9b4e69cabe4b88de698afe7bb93e69d9fefbc8ce8808ce698afe696b0e79a84e5bc80e5a78b/</link>
      <pubDate>Sun, 19 Jan 2014 15:12:40 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/01/19/e5b9b4e69cabe4b88de698afe7bb93e69d9fefbc8ce8808ce698afe696b0e79a84e5bc80e5a78b/</guid>
      <description>前面一段日子都没写日志，本该写一篇总结的。但是看着feedly和QQ空间里面一篇接着一篇的总结接踵而至，原本该让人细细品味一番的年终总结，不知为何带上了一点审美疲劳的味道。我就知道，我该缓一缓这篇日志。然后就到了考试周，一晃眼，就到了今天。 其实我写不写这篇总结，关注我博客的也该知道我的生活状态。无论是《初来乍到》系列还是《泡面加鸡蛋》系列都真实的记录着我的变化。但我还是得说，2013真是神奇的一年。 2013，我读了研，这个我22岁以前从没有想过的事情。 2013，我有了实习，有了工作、公司的真实概念，也勉强实现了经济独立。 2013，我读了很多书，认识了很多人，做了很多事，也浪费了很多时间。 我常常</description>
    </item>
    
    <item>
      <title>泡面加鸡蛋（五）</title>
      <link>https://wonderflow.info/posts/2013/12/26/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e4ba94efbc89/</link>
      <pubDate>Thu, 26 Dec 2013 13:54:47 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/12/26/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e4ba94efbc89/</guid>
      <description>圣诞节一晃眼就过去了，但是喜庆的气氛却没有过去。正相反，宿舍门口的圣诞快乐还没来得及擦去，宿管阿姨们又悄悄布置起了好多灯笼和彩灯，俨然一副欢度春节的模样。果然，元旦就快来了。 快要过年了，周围不知不觉经常听到发票啊、财务啊、加班啊之类的字眼。想来也确实如此，过年之前无论是学校还是企业财务肯定是最忙的。然后就是绩效报告了，年终奖怎么发、职称怎么评，业绩真的很重要啊。 然后BO同学的项目就匆匆忙忙上线了。 真的很匆忙啊！给了一个月时间写设计、写文档，恨不得再多花点时间好好设计一番。然后终于开始写代码了，甚至BO同学一度以为自己可以慢慢悠悠花上一年时间写一个超大的玩意。结果才写了不到一个月，老板突然告诉B</description>
    </item>
    
    <item>
      <title>&#39;《MapReduce Design Patterns》读书笔记——浅谈Map/Reduce设计模式 &#39;</title>
      <link>https://wonderflow.info/posts/2013/12/15/e3808amapreduce-design-patternse3808be8afbbe4b9a6e7ac94e8aeb0-e6b585e8b088mapreducee8aebee8aea1e6a8a1e5bc8f/</link>
      <pubDate>Sun, 15 Dec 2013 15:48:24 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/12/15/e3808amapreduce-design-patternse3808be8afbbe4b9a6e7ac94e8aeb0-e6b585e8b088mapreducee8aebee8aea1e6a8a1e5bc8f/</guid>
      <description>概述 MapReduce是一个基于Hadoop的算法框架。本文将从Hadoop开始介绍，然后重点讲述可用于Hadoop上的Map/Reduce设计模式。 Hadoop简介 Hadoop历史 Hadoop最早起源于Apache Nutch，该项目始于2002年，是Apache Lucence的子项目之一。该项目的出现源于两篇论文，一篇是2003年发表的“关于谷歌分布式文件系统”（NDFS：Nutch Distributed File System），描述了谷歌搜索引擎网页相关数据存储架构，解决Nutch遇到的网页抓取和索引过程中产生的超大文件存储需求问题。一篇是2004年发表的“关于谷歌分布式计算框架MapReduce”，描述了谷歌内部最</description>
    </item>
    
    <item>
      <title>泡面加鸡蛋（四）</title>
      <link>https://wonderflow.info/posts/2013/12/04/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e59b9befbc89/</link>
      <pubDate>Wed, 04 Dec 2013 16:24:04 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/12/04/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e59b9befbc89/</guid>
      <description>杭州的天气跟南方大多数城市一样，随着桔梗的燃烧，一天比一天差了下去。而我负责的项目也因为临近上线，显得跟这鬼天气一样，越来越有些糟糕。毕竟还是个毛躁的新人啊，要学的太多。 晚上跟亮哥加班回来，一起在雾霾中从百脑走回了玉泉。月光穿不过雾霾，但是霓虹灯依旧闪亮。其实穿着时髦的人依旧穿梭在灯红酒绿、篮球场足球场上也依旧灯火通明，仿佛丝毫没有受到这天气预报中所说的严重污染的影响。唯一的改变只是路上少了些行人的步伐，和那些零零星星的地摊。 一路上，我们聊了很多。从亮哥口中，我知道了那个“他们都是徒子徒孙”的故事，我们都很崇拜李老师，为他自豪；也知道了除了实验室和宿舍，还有图书馆和教七适合自习。亮哥还告诉我，</description>
    </item>
    
    <item>
      <title>读《史蒂夫·乔布斯传》琐记</title>
      <link>https://wonderflow.info/posts/2013/12/01/e8afbbe3808ae58fb2e89282e5a4abc2b7e4b994e5b883e696afe4bca0e3808be79090e8aeb0/</link>
      <pubDate>Sun, 01 Dec 2013 13:49:40 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/12/01/e8afbbe3808ae58fb2e89282e5a4abc2b7e4b994e5b883e696afe4bca0e3808be79090e8aeb0/</guid>
      <description>《史蒂夫·乔布斯传》很有名，出版了两年多才去看似乎略有些相见恨晚。但是想到才拥有自己的第一件苹果产品两天就开始在其上阅读，也不觉得遗憾。整个周末，整整两天都在看这本长达八百页书，一下子就看完了。 本书以乔布斯的叛逆与暴躁开头，以乔布斯的睿智传奇结尾。叙述中肯，你能很清晰的看到乔布斯的缺点，也能清楚感受到乔布斯至于苹果、至于这个世界的伟大。 乔布斯是个控制欲极强的人，他年轻时奉行素食主义、不爱洗澡、独断专行、脾气暴躁、丝毫不顾及他人的面子，显得极其自我。后来这些习惯似乎都有所改变，我看到的他变成了一个慈祥的父亲、顾家的丈夫。 乔布斯也是一个洞察力极强的人，他能轻易看穿人心，他的语言有魔力，让你相信他，</description>
    </item>
    
    <item>
      <title>《站在两个世界的边缘（程浩）》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/11/29/e3808ae7ab99e59ca8e4b8a4e4b8aae4b896e7958ce79a84e8beb9e7bc98e3808befbc88e7a88be6b5a9efbc89e8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Fri, 29 Nov 2013 16:55:43 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/29/e3808ae7ab99e59ca8e4b8a4e4b8aae4b896e7958ce79a84e8beb9e7bc98e3808befbc88e7a88be6b5a9efbc89e8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>这本书是程浩写的，程浩是个怎么样的人呢？在七月份的时候，知乎上有了太多的讨论。在此，我只想说，他是个了不起的榜样。他自己因为残疾不会走路，但是他却教会了别人走路。他的意志给人以力量，他对生命的思考给人以警醒，他是个职业病人但是他用自己的文字获得了世界的认可。 因为程浩，我第一次购买正版的电子书。我尊重他，也被他感动。 PS：发现多看阅读很不错，打通了印象笔记，在电子书上阅读做下来的笔记可以自动导出到印象笔记，而且格式也很美。可惜了，放到博客上格式就变得难看了。 附上读书笔记内容。 昂着头的艺术 2013-11-29 00:21:16 不必可怜谁，不必同情谁。所谓生活，不过就是一种“昂着头的艺术”，仅此而已。 我和老妈那些事儿 2013-11-30 00:38:20 “在很久很久</description>
    </item>
    
    <item>
      <title>《Practices of an Agile Developer》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/11/26/e8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Tue, 26 Nov 2013 05:01:57 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/26/e8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>这是一本比较普通的书，读了没什么坏处，不读也没什么大的损失。 全书讲了有关敏捷开发应该有的45个习惯，有的很实用，有的比较啰嗦。 比较有启发的一些习惯： 1、先难后易，先要解决技术难点，把简单的问题留到最后。 2、Blame doesn&amp;rsquo;t fix bugs. 3、写单元测试很重要。如果你的代码写单元测试很困难，说明设计本身有问题。 4、要专业而不是自我。对事不对人。 5、持续小步前进才是敏捷。一个学习型的团队才是好团队。 6、把握开发的节奏，保持事件之间稳定重复的间隔。 7、让客户做决定。给客户想要的软件而不是我们臆想的。 8、根据需要选择技术，而不是卖弄技术。 9、提早集成、频繁集成。保持可发布状态。 10、提早实现自动化部署。 11、使用短迭</description>
    </item>
    
    <item>
      <title>No Content Found</title>
      <link>https://wonderflow.info/posts/2013/11/24/775/</link>
      <pubDate>Sun, 24 Nov 2013 16:06:14 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/24/775/</guid>
      <description>2013.11.19~2013.11.25 a sad story. Nothing serious! :(</description>
    </item>
    
    <item>
      <title>《ruby元编程》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/11/21/e3808arubye58583e7bc96e7a88be3808be8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Thu, 21 Nov 2013 16:27:21 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/21/e3808arubye58583e7bc96e7a88be3808be8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>总的来说，《ruby元编程》是一本好书。 当我拿到这本书的时候，第一反应是什么叫元编程？书上的定义是这样的：“元编程是写出编写代码的代码”。 而我认为，元编程是ruby语言的一些高级特性，是属于ruby的奇技淫巧。 有意思的是，这本书不是枯燥的一章一章给你灌输这些知识，而是描述公司里一个老程序员一对一带一个年轻程序员的故事。就是所谓的mentor/buddy制度，大部分IT公司都有，就是不知道贯彻的怎么样。不管书中描述的这样的工作情况是不是真的，都很令人神往。 我觉得一个IT行业的大公司就该有这样的气度，把新员工当朋友、兄弟一样培养，毕竟IT行业中，人才是最大的财富。这样带起来的团队，相比凝聚力也是极</description>
    </item>
    
    <item>
      <title>泡面加鸡蛋（三）</title>
      <link>https://wonderflow.info/posts/2013/11/04/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e4b889efbc89/</link>
      <pubDate>Mon, 04 Nov 2013 14:55:45 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/04/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e4b889efbc89/</guid>
      <description>让我又想起要来要写一下生活记录的是这个学姐的博客：Crystal，上面的日志都很温暖，很有正能量。所以我也觉得自己该写点什么来记录一下自己的生活，过去了就过去了的话，多可惜啊。 最近“爸爸去哪儿”这个电视节目很火，拍的也非常好。从一开始的小孩子们离不开玩具，到互相帮助克服困难去完成一个又一个的任务，都是4到6岁的小孩子，看上去非常真实。那些爸爸们也是放下了平时明星的范儿，展露出了最平凡朴实的爸爸的样子，很多画面都非常感人。其实观众也许早就看腻了镜头下面刻意演出来的东西了吧，所以这种最接近生活的真、善、美，才会如此打动人心。而善良、诚实、勇敢、正直、知错就改、有责任感、乐于分享、团队合作等等优秀的</description>
    </item>
    
    <item>
      <title>ubuntu源的本地化</title>
      <link>https://wonderflow.info/posts/2013/10/18/ubuntue79a84e6ba90/</link>
      <pubDate>Fri, 18 Oct 2013 08:18:21 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/10/18/ubuntue79a84e6ba90/</guid>
      <description>最近，为了装个runit，装了2天，各种问题都出现了，始终无法解决，都快装哭了。 最后用排除法，一个个排除问题，发现是使用的网易ubuntu源的问题。 哎，看来从研究设计到工程细节，还是有很大的技术距离的。 静默安装方法 {% codeblock %} sudo DEBIAN_FRONTEND=noninteractive apt-get install -f -y &amp;ndash;force-yes &amp;ndash;no-install-recommends runit {% endcodeblock %} 最后为了安全稳定，决定自己建立ubuntu的局域网源，这样后面安装软件也会更快。 1、安装依赖软件 {% codeblock %} sudo apt-get install dpkg-dev {% endcodeblock %} 2、将 /var/cache/apt/archives/下的所有deb文件拷到(cp命令，图形界面都没问题) 你想要的地方，拷贝前建议执行一下 {% codeblock %} sudo apt-get autoclean {% endcodeblock %} 比方说拷至home下新建的deb文件夹 {% codeblock %} sudo cp /var/cache/apt/archives/*.deb /var/www/deb/ {% endcodeblock %} 3、拷贝完成后到/var/</description>
    </item>
    
    <item>
      <title>Ruby版的crash_recovery自动化测试工具</title>
      <link>https://wonderflow.info/posts/2013/10/14/rubye78988e79a84crash_recoverye887aae58aa8e58c96e6b58be8af95e5b7a5e585b7/</link>
      <pubDate>Mon, 14 Oct 2013 15:20:42 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/10/14/rubye78988e79a84crash_recoverye887aae58aa8e58c96e6b58be8af95e5b7a5e585b7/</guid>
      <description>高可靠性（High availability）是个相当有意义课题，在现有大型集群机器上，有着广泛的应用。如今，针对这个命题的实现，各大公司都提供了方方面面的方式。针对高可靠性的测试，也就有了意义。 正好近期在学ruby，于是就尝试着用ruby做了一个crash——recovery测试工具。 工具分为两块，第一块是破坏虚拟机，使虚拟机突然宕机。第二块就是杀虚拟机中相应的进程。 最终都是要看进行了这些破坏以后，系统是否能够自动恢复。 破坏虚拟机，使其突然宕机，用到的是我之前博客中写到的方法《Linux Magic Key — SysRq》，使用&amp;quot;echo c &amp;gt; /proc/sysrq-trigger&amp;quot;命令让虚拟</description>
    </item>
    
    <item>
      <title>泡面加鸡蛋（一）</title>
      <link>https://wonderflow.info/posts/2013/09/26/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e4b880efbc89/</link>
      <pubDate>Thu, 26 Sep 2013 14:53:20 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/09/26/e6b3a1e99da2e58aa0e9b8a1e89b8befbc88e4b880efbc89/</guid>
      <description>转眼间，开学都快一个月了，有了习惯的生活节奏，习惯了宿舍的人、事、物，觉得再也不能使用初来乍到这个题目了。 鉴于五舍提供的“泡面加鸡蛋”服务实在是太周到了，我决定帮忙宣传一下。全天16个小时无微不至的小卖部服务，还有阿姨亲自帮你用微波炉煮的泡面加鸡蛋，实在是让我感到非常满意，尤其是小卖部还就在宿舍隔壁，感觉跟自己家开的一样。 所以总的来说，虽然五舍每天只能洗洗冷水澡，上个厕所、倒个水都感觉要走过一条街一样累，但是我还是比较满意的！ 最近我习惯天天去操场跑5圈，心情非常好，偶尔熬个夜还能吃碗“泡面加鸡蛋”，尤其是小卖部的阿姨还会偶尔拿她女儿的初中数学题来虐我们这帮人的智商，大有一副你答不出来就没得吃的</description>
    </item>
    
    <item>
      <title>JavaScript中的闭包（JavaScript权威指南读书笔记）</title>
      <link>https://wonderflow.info/posts/2013/09/15/javascripte4b8ade79a84e997ade58c85efbc88javascripte69d83e5a881e68c87e58d97e8afbbe4b9a6e7ac94e8aeb0efbc89/</link>
      <pubDate>Sun, 15 Sep 2013 16:31:10 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/09/15/javascripte4b8ade79a84e997ade58c85efbc88javascripte69d83e5a881e68c87e58d97e8afbbe4b9a6e7ac94e8aeb0efbc89/</guid>
      <description>最近在看javascript的书，稍微学习一些前端的东西，以便做些web应用的方便。 以前看到闭包这个概念一直不太懂，今天下定决心好好研读了一下，终于明白了一二。 像绝大多数高级编程语言，javascript也有其词法的作用域。意思是说，当函数被执行的时候，起作用的不是被调用时的变量作用域，而是在函数被定义的时候声明的变量域。所以为了实现这个词法作用域的功能，javascript必须在中间过程中不仅保存函数的代码，还需要保存当时所引用的作用域链。这个函数对象和函数变量保存起来的作用域的组合在计算机科学里的称呼就叫做闭包。 从技术角度来说，javascript里的函数都是闭包：它们都是对象，并且它们有</description>
    </item>
    
    <item>
      <title>抉择</title>
      <link>https://wonderflow.info/posts/2013/09/10/e68a89e68ba9/</link>
      <pubDate>Tue, 10 Sep 2013 16:07:36 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/09/10/e68a89e68ba9/</guid>
      <description>这是一个大命题。 导师说你是否喜欢云计算，我说喜欢，那么我们便一直走这么一条路了。 如果出现从技术脱身的另一条路，你是否愿意去干呢？那一条充满鲜花与掌声，充满荣光与喝彩的道路。 其实也是坎坷而布满荆棘的。 想起以前听到的一个关于选文理科的段子：“如果我选择了文科，那么以后便再也不会解泰勒方程了，但是如果我选择了理科，我以后依旧能写写文章。”我不知道这个段子有没有启迪意义，我不知道到底选文科还是选理科哪个更好。 但是我之前的文章里就说了，既然选择了，就不能后悔。如果出现了一点点诱惑就改变了自己的想法，那真是幼稚可笑。 何况自己从来都没有做出点什么出彩的地方，何谈选择。 ====================================================================================== 话又说回来，又是一年教师节，祝天下老师</description>
    </item>
    
    <item>
      <title>Linux Magic Key -- SysRq</title>
      <link>https://wonderflow.info/posts/2013/09/03/linux-magic-key-sysrq/</link>
      <pubDate>Tue, 03 Sep 2013 11:34:14 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/09/03/linux-magic-key-sysrq/</guid>
      <description>SysRq 键是什么 ? {% codeblock %} `It is a ‘magical’ key combo you can hit which the kernel will respond to regardless of whatever else it is doing, unless it is completely locked up. 即linux为内核设定的一系列关键键，让内核快速做出反应，跳过一些常规的过程。 如何开启神奇的SysRq键? 你需要配置 /proc/sys/kernel/sysrq 这个文件。 默认情况下，文件的值是1，即开启所以sysrq请求的功能。所有/proc/sys/kernel/sysrq文件值对应的功能如下： {% codeblock %} 0 – disable sysrq completely 1 – enable all functions of sysrq &amp;gt;1 – bitmask of allowed sysrq functions (see below for detailed function description): 2 – enable control of console logging level 4 – enable control of keyboard (SAK, unraw) 8 – enable debugging dumps of processes etc. 16 – enable sync command 32 – enable remount read-only 64 – enable signalling of processes (term, kill, oom-kill) 128 – allow reboot/poweroff 256 – allow nicing of all RT tasks {% endcodeblock %} 可以使用如下命令进行设置： {% codeblock %} echo &amp;quot;number&amp;quot; &amp;gt;/proc/sys/kernel/sysrq {% endcodeblock %} &amp;lt;!-- more --&amp;gt; * 如何使用? ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ {% codeblock %} echo ‘key’</description>
    </item>
    
    <item>
      <title>九月一号居家</title>
      <link>https://wonderflow.info/posts/2013/09/01/e4b99de69c88e4b880e58fb7e5b185e5aeb6/</link>
      <pubDate>Sun, 01 Sep 2013 15:46:35 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/09/01/e4b99de69c88e4b880e58fb7e5b185e5aeb6/</guid>
      <description>多少年了，第一次，在九月一号这个奇奇怪怪不知谁规定的学校开学的日子里，我在家里度过。而我直到现在，就是这一天快要过去的时候才恍然大悟，觉得该写点什么以示纪念。 纪念什么呢？纪念此时的生活…… 其实放在一年前的现在，我都没想过我会去读研。甚至在我的大学前三年，看到有人铁了心准备以后读研，我都会有种道不同不相为谋的轻蔑感觉。如今看来，以前的自己还是有点轻浮可笑。 看着以前宿舍微信群里的聊天，一起的三个小伙伴又住在了一个宿舍，另外关系好的一个朋友替换了我的位置。莫名的有点伤感，有点嫉妒，有点遗憾，有点落寞，却依然替他们高兴。可以再相聚两年多，是多么幸运的一件事啊！ 不过我总说，要向前看，毕竟，又认识了那么多</description>
    </item>
    
    <item>
      <title>《git pocket guide》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/08/27/e3808agit-pocket-guidee3808be8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Tue, 27 Aug 2013 15:47:21 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/27/e3808agit-pocket-guidee3808be8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>最近读了2013年新出的一本关于git的书《git pocket guide》既锻炼了自己的英语阅读，又学习了git，真是一举两得。 读书笔记长达40多页，要是整理成wordpress网页的格式，非得折腾死，还是直接上传一个pdf比较直接，看这里：chinese_git_pocket_wonderflow。 学会了git，就该常用github了，这个程序员的天堂。</description>
    </item>
    
    <item>
      <title>Putty使用配置</title>
      <link>https://wonderflow.info/posts/2013/08/18/puttye4bdbfe794a8e9858de7bdae/</link>
      <pubDate>Sun, 18 Aug 2013 10:47:48 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/18/puttye4bdbfe794a8e9858de7bdae/</guid>
      <description>Putty是一款不错的，在windows下可以用来进行ssh和telnet远程连接的小工具，绿色纯净。之所以说它绿色纯净，是它就纯粹只是一个不到1M大小的exe文件。但是刚上手的时候，由于懒得配置，就会觉得用起来非常不舒服，跟linux中原生态终端有相当程度的山寨痕迹。但是今天下定决心好好配置一番，发现最终效果还不错。 1、登陆，在hostname处填写相应IP，点击Open按钮，即可连接过去。 2、修改字体，对着上边栏右键-&amp;gt;Change Settings-&amp;gt;Window-&amp;gt;Appearance，看到右边有Font Settings，点击Change按钮，即可改变字体和按钮，推荐C</description>
    </item>
    
    <item>
      <title>2013.8小记录</title>
      <link>https://wonderflow.info/posts/2013/08/15/2013-8e5b08fe8aeb0e5bd95/</link>
      <pubDate>Thu, 15 Aug 2013 13:46:57 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/15/2013-8e5b08fe8aeb0e5bd95/</guid>
      <description>1、有道云笔记很多bug，给提了建议也没见到反馈，很失望。还是github好用，还自带版本控制功能。要把平时每天记录的习惯迁移过去。 2、要做的事情很多很杂，但是一旦做了，就尽力做好了，不要把主要的部分完成了，对最后的部分草率对待。所以工程的文档一定要写好，展示的PPT要漂亮，哪怕是临时用用的代码，也要整理起来。我粗浅的认为，这就是收获。 3、cloudfoundry还是按照之前的打算，从VMC的源码开始着手，从一个用户的角度了解最能知道我们缺什么，应该做什么。 4、平时要做一件事情之前，仔细考虑一下有什么地方可以通过脚本或程序自动完成的。因为只要是不确定的事情，都有可能失败，失败了就要重来。重来的</description>
    </item>
    
    <item>
      <title>CloudFoundry入门材料汇集</title>
      <link>https://wonderflow.info/posts/2013/08/11/cloudfoundrye585a5e997a8e69d90e69699e6b187e99b86/</link>
      <pubDate>Sun, 11 Aug 2013 05:51:54 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/11/cloudfoundrye585a5e997a8e69d90e69699e6b187e99b86/</guid>
      <description>架构总览 深入cloudfoundry（第一版）上， 深入cloudfoundry（第一版）下, 深入cloudfoundry（一周年版）, Cloud Foundry技术全貌及核心组件分析, 以NATS为主线的CloudFoundry原理, 部署相关 ****多节点部署之配置文件全攻略, Running your own CloudFoundry based on your IaaS. Part 1, Running your own CloudFoundry based on your IaaS. Part 2. 组件细节 VMC, DEA, NATS, Router, cloudcontroller, EventMachine, Service Gateway dashboard: 1,2,3 ruby相关 Ruby socket programming in CloudFoundry,** ** How to use your GemFile.** **</description>
    </item>
    
    <item>
      <title>初来乍到（五）</title>
      <link>https://wonderflow.info/posts/2013/08/06/e5889de69da5e4b98de588b0efbc88e4ba94efbc89/</link>
      <pubDate>Tue, 06 Aug 2013 13:26:29 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/06/e5889de69da5e4b98de588b0efbc88e4ba94efbc89/</guid>
      <description>转眼间，来杭已经有一个月的时间了。但是我还是想用初来乍到这个标题，来叙写我的心情。因为我依旧没有属于自己的圈子，似乎下班以后待在实验室，除了对着电脑看资料，好像已经没有了别的选择。显然我不愿意这么干。 不过还好，要不是这样，我也不会找以前的朋友聊天。也不会意识到原来我也已经有了十几年交情的朋友。时光啊，真的匆匆，似乎一天的时间很长，但是如果试着每天记录下自己一天到底做了什么，就会发现做的事情真的很少。遗憾的是，有太多的东西要学，有太多的风景要看，有太多的朋友要联络。我很笨，常常分不清主次，只是任性妄为，所以只能是顾此失彼。 没有了游戏的干扰，没有热闹的喧嚣。所幸有这份宁静，让我有时间去思考，去发现</description>
    </item>
    
    <item>
      <title>UNIX之ss命令</title>
      <link>https://wonderflow.info/posts/2013/08/06/unixe4b98bsse591bde4bba4/</link>
      <pubDate>Tue, 06 Aug 2013 02:31:59 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/06/unixe4b98bsse591bde4bba4/</guid>
      <description>ss命令用来进行统计socket连接的统计。与netstat命令相似。 这个命令之前不常用，甚至没怎么听过，直到有一天不小心想要输入ssh的时候打了ss就回车，结果出来意想不到的好东西，让我决定去学习一下。 SS能提供的信息包括： TCP连接 UDP连接 已经建立的 ssh/ftp/http/https连接 本地进程连向X服务器的连接 筛选状态(例如connected, synchronized, SYN-RECV, SYN-SENT,TIME-WAIT)、地址和端口 所有在FIN-WAIT-1状态下的TCP连接。 大多数linux发行版都涵盖ss命令以及其他一些工具，熟悉这些命令有助于多网络状态的掌握。 下面罗列出一些常用的方法。 {% codeblock %} $ ss -s #列出所有的so</description>
    </item>
    
    <item>
      <title>UNIX之lsof命令</title>
      <link>https://wonderflow.info/posts/2013/08/05/unixe4b98blsofe591bde4bba4/</link>
      <pubDate>Mon, 05 Aug 2013 09:04:25 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/05/unixe4b98blsofe591bde4bba4/</guid>
      <description>据说lsof命令很强大，就学习了一下。这个网站讲的最好,翻译如下： **lsof（list open files）**是一个列出当前系统打开文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。所以lsof被称为unix系统检测的瑞士军刀。 那怎么用呢? 接下来我们一个个来看。 罗列出所有的文件设备情况. {% codeblock %} $ lsof {% endcodeblock %} 不带参数的运行 lsof 就是列出所有被进程打开的文件。 查看文件被谁使用. {% codeblock %} $ lsof /path/to/file {% endcodeblock %} 如果把文件路径作为参数，lsof命令会把用到这个文件的所有进程都罗列出来。 也可以加多个路径在后面，它会把所涉及到这些文件的进程都罗列出来: {% codeblock %} $ lsof /path/to/file1</description>
    </item>
    
    <item>
      <title>Ubuntu12.04LTS Install Record</title>
      <link>https://wonderflow.info/posts/2013/08/02/ubuntu12-04-install-record/</link>
      <pubDate>Fri, 02 Aug 2013 11:50:12 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/02/ubuntu12-04-install-record/</guid>
      <description>一、软件源更新 {% codeblock %} $vi /etc/apt/sources.list {% endcodeblock %} 二、定制命令提示符： {% codeblock %} $vi ~/.bashrc $PS1=&amp;quot;[\e]0;\u@\h: \w\a\e[32;1m]\W$[\e[0m] &amp;quot; #效果:仅高亮显示短路径和$符号 {% endcodeblock %} 三、安装chrome 登录，同步相应配置，这样浏览器方面的各种配置就齐全了 四、github相关 安装git: {% codeblock %} $ sudo apt-get install git {% endcodeblock %} github：配置SSH 五、中文输入法ibus 找到language support这个应用，然后找到keyboard input method system设置项（默认的是none），选择ibus项就可以了。 六、vim (配置ruby插件，拿的别人的方案) {% codeblock %} $ sudo apt-get install ctags {% endcodeblock %} start from:git clone 七、字体设置： download consolas.tty {% codeblock %} $ sudo mkdir -p /usr/share/fonts/vista $ sudo cp Yahei.ttf /usr/share/fonts/vista/ #改变权限： $sudo chmod 644 /usr/share/fonts/vista/*.ttf #安装： $cd /usr/share/fonts/vista/ $sudo mkfontscale $sudo mkfontdir $sudo fc-cache -fv {% endcodeblock %} 八、安装ruby wiki</description>
    </item>
    
    <item>
      <title>Learning English...</title>
      <link>https://wonderflow.info/posts/2013/07/30/learning-english/</link>
      <pubDate>Tue, 30 Jul 2013 12:57:42 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/30/learning-english/</guid>
      <description>Recently, I feel my life is full of English . Reading English materials , asking technical problems with English emails , and sometimes joking with friends. Reading is OK but it&amp;rsquo;s really headache for me to write , speak and listen . It&amp;rsquo;s really a little pity not spending more time on it before. But things always like this , only your turn to use will you understand how it&amp;rsquo;s enviable to speak fluent English . Even one day I told a friend , I fell in love with someone who speak very good English . Then I told that&amp;rsquo;s true unless I could have the same skill.
Last week, I watched the film &amp;ldquo;American Dreams In China&amp;rdquo; . It&amp;rsquo;s really moving and I know that&amp;rsquo;s what I want. How I want to fight with brothers to do what we love to do , to have a space only belong to us and to earn my own living ! A year ago I lost the chance and chose a different way to go, I&amp;rsquo;m sure to catch it two years later .My brothers , wait for me to go back ! I promise to find all of you bringing a brand new bobo.
Life here is ordinary . I&amp;rsquo;m happy with my work learning but a little lonely with very few friends here. Sometimes when I miss roomies before very much , I will give them a call talking each other&amp;rsquo;s life. In fact they are near surrounded with QQs telephones and messages if you want to keep contacts.
At last still that motto for myself : Never give up , and nothing replaces hard work.</description>
    </item>
    
    <item>
      <title>HTML标记大全参考手册【转】</title>
      <link>https://wonderflow.info/posts/2013/07/29/htmle6a087e8aeb0e5a4a7e585a8e58f82e88083e6898be5868ce38090e8bdace38091/</link>
      <pubDate>Mon, 29 Jul 2013 09:15:59 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/29/htmle6a087e8aeb0e5a4a7e585a8e58f82e88083e6898be5868ce38090e8bdace38091/</guid>
      <description>文件类型 （放在档案的开头与结尾） 文件主题 （必须放在「文头」区块内） 文头 （描述性资料，像是「主题」） 文体 （文件本体） &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;结构性定义（由浏览器控制的显示风格） 标题 &amp;lt;H?&amp;gt;&amp;lt;/H?&amp;gt; （从1到6，有六层选择） 3.0 标题的对齐 &amp;lt;H? ALIGN=LEFT|CENTER|RIGHT&amp;gt;&amp;lt;/H?&amp;gt; 3.0 区分 3.0 区分的对齐 引文区块 （通常会内缩） 强调 （通常会以斜体显示） 特别强调 （通常会以加粗显示） 引文 （通常会以斜体显示） 码 （显示</description>
    </item>
    
    <item>
      <title>Eventmachine Introduction Translation</title>
      <link>https://wonderflow.info/posts/2013/07/29/eventmachine-introduction-translation/</link>
      <pubDate>Mon, 29 Jul 2013 08:49:32 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/29/eventmachine-introduction-translation/</guid>
      <description>最近在学Eventmachine，发现Dan Sinclair写的eventmachine introduction真心赞！ 然后跟陈琦一起翻译了一把。看这里：EventMachine入门 Eventmachine是Ruby中相当重要的轻量级通信模块，其相当于node.js，也是CouldFoundry中通信的主要途径。理清Eventmachine的工作机制对于理解CloudFoundry有磨刀不误砍柴工的功效。 关于Eventmachine的学习，我的路线为： 磊哥的博客 github上的Eventmachine Dan Sinclair写的eventmachine的入门导论 有人说，效率不是你工作的时间长短而是你</description>
    </item>
    
    <item>
      <title>Guide for Cloud Foundry New Teamer</title>
      <link>https://wonderflow.info/posts/2013/07/25/guide-for-cloud-foundry-new-teamer-2/</link>
      <pubDate>Thu, 25 Jul 2013 05:41:20 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/25/guide-for-cloud-foundry-new-teamer-2/</guid>
      <description>Preparation 1、阅读以下博客： 了解架构，阅读“深入CloudFoundry一周年” 2、请准备好一个linux的客户端，如果没有请申请一个虚拟机，并安装好ubuntu10.04（windows下使用远程连接的方式是使用putty软件。） 3、如果不熟悉linux，请阅读linux相关命令，初步了解。 Start 定位cloudfoundry集群： 请使用$ curl [your domain]。若显示出正常信息则初步表面集群配置正确，否则请找帮你配置集群的人。 配置linux源，提高下载速度。(百度一个ubuntu cn的源) {% codeblock %} $ /etc/apt/sources.list $ sudo apt-get update {% endcodeblock %} 安装git，为了下载一个基本应用，github上面的。 {% codeblock %} $ sudo apt-get install git {% endcodeblock %} 安装maven，为了</description>
    </item>
    
    <item>
      <title>养成一种习惯</title>
      <link>https://wonderflow.info/posts/2013/07/22/e585bbe68890e4b880e7a78de4b9a0e683af/</link>
      <pubDate>Mon, 22 Jul 2013 13:52:10 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/22/e585bbe68890e4b880e7a78de4b9a0e683af/</guid>
      <description>看文章说，养成一种习惯需要21天，有的人又说，至少需要一个月，还有的人说，要66天。 不管如何，我觉得如果每天都能坚持做一件事都是值得骄傲的。不管是每天坚持吃素还是每天坚持被单词，还是每天坚持刷题目。 我发现要学好ruby有个容易的方法。 刷codeforces.com,上面有各种大神的代码，让人赏心悦目看得无比开心。 遇到不会的再去查一查http://www.ruby-doc.org，看看上面的解释，有时候还可以百度一下。 然后记录下来，可以使用有道云笔记，用着感觉不错。 然后最近在学英语啊，一年不用，英语落下太多了。而好多资料都是英语的，郁闷啊。不知道拓词到底有没有用。求好的学英语的方法！ 养成习惯吧。</description>
    </item>
    
    <item>
      <title>初来乍到（四）</title>
      <link>https://wonderflow.info/posts/2013/07/19/e5889de69da5e4b98de588b0efbc88e59b9befbc89/</link>
      <pubDate>Fri, 19 Jul 2013 12:02:54 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/19/e5889de69da5e4b98de588b0efbc88e59b9befbc89/</guid>
      <description>又是一个周五，感觉又像是回到中小学那会，非常期待周末的来临，其实每天去上班也没那么讨厌，就是每天要在固定的时间起床，要在班车上来回坐两个小时，实在让人不舒服。 渐渐习惯了这里的生活，每天七点半起床，八点半坐上班车，九点半开始对着电脑学习，十一点半吃饭，然后继续看资料，五点半坐上班车，六点半吃晚饭，七点坐在实验室的位子上继续看会资讯，实在没地方去啊。 值得高兴的是，这种公司终于换地方了，有了自己的座位和机器，不用每天背着笔记本来来回回了。而且用上纯粹的linux机器还有一种莫名的爽感，虽然无法上QQ了，但是linux精神更加感染我了。说实话，工作确实更适合linux，邮件也确实更适合交流。 终于在两个</description>
    </item>
    
    <item>
      <title>初来乍到（三）</title>
      <link>https://wonderflow.info/posts/2013/07/14/e5889de69da5e4b98de588b0efbc88e4b889efbc89/</link>
      <pubDate>Sun, 14 Jul 2013 13:14:15 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/14/e5889de69da5e4b98de588b0efbc88e4b889efbc89/</guid>
      <description>今天在韩莉师姐的组织下，NJUST_ACM驻浙大小分队聚在一起吃饭了。 瞬间又感受到集训队的好啊，要不是集训队，怎么会有这么一帮师兄师姐如此关照呢。而且是到哪都有一帮人的关照，无论是北京、上海、南京还是杭州。 我们一共四个人，在环境优雅的御野江鲜馆吃了两百多。。。主要是阿登师兄点菜点的略多，最后由最大的王镇师兄结了帐。 通过聊天才知道，其实他们之间也不常联系，确实，大家都是各忙各的，都有自己的圈子，哪有那么多时间呀。 然后发现其实其他实验室的情况也都差不多，用王镇师兄的话说就是，硕士嘛，做做项目上上课，也就毕业了，不用关心太多。 字里行间分明感受到了读博士的压力啊。 想想也是，当年王镇学长一度因为是NJU</description>
    </item>
    
    <item>
      <title>初来乍到（二）</title>
      <link>https://wonderflow.info/posts/2013/07/13/e5889de69da5e4b98de588b0efbc88e4ba8cefbc89/</link>
      <pubDate>Sat, 13 Jul 2013 13:53:11 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/13/e5889de69da5e4b98de588b0efbc88e4ba8cefbc89/</guid>
      <description>今天新买的小米2A到货了，虽然刚下单没几天就出现了小米2s降价甩卖的剧情，觉得小米很不厚道，但是用用还可以，反正就是过渡机，觉得对得起这个价格就好。 一直惦记的细面终于在我的细心发掘之下在食堂找到了，虽然它是被煮烂了的，但是吃起来还是略微有一点熟悉的味道。现在每天喝喝粥、吃吃杂粮，偶尔吃吃鱼，感觉也挺不错。添宇跟我说，他两个月不吃荤菜瘦了20斤，我觉得我可以效仿。 今天去老同学PC家里玩了一圈，发现他家里真心不错，有空调，有洗衣机、有冰箱、有厨房、有电视、有网、有热水器，一切该有的都有，还有个美女一起合租，确实不错，而且最主要的是热闹，大家每天回家在一起看看电视聊聊天，多开心啊！ PC的室友也有一个</description>
    </item>
    
    <item>
      <title>2013.7.6</title>
      <link>https://wonderflow.info/posts/2013/07/11/2013-7-6/</link>
      <pubDate>Thu, 11 Jul 2013 11:48:54 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/11/2013-7-6/</guid>
      <description>想起来到杭州来的第二天，我们就被青旅的老板坑了，说要给我们换个房间住一天，因为这个房间在之前已经被预定了，同时信誓旦旦的说肯定能给我们安排好住的地方。 直到晚上十点回到青旅才发现，那个地方没空调不说，还堆满了杂物，根本不能住人。后来决定让老板退钱我们出去想办法自己解决一晚。 然后我们走着走着就到了KTV。 三个才认识一天的小伙子，去KTV唱通宵。 果然唱了几首歌就唱不下去了。 原来没有了DZ唱的老男人经典曲目，没有了翔子唱的青春活力朝气，没有了踩蚂蚁唱的周杰伦和五月天，没有了好吟的恣肆的酒意和放荡的歌声，没有了肃驰陪我唱到一半偷偷跑去肯德基吃宵夜，竟然只剩下了一片落寞和孤单。 什么嘛，最近几年去KTV从来</description>
    </item>
    
    <item>
      <title>初来乍到（一）</title>
      <link>https://wonderflow.info/posts/2013/07/10/e5889de69da5e4b98de588b0/</link>
      <pubDate>Wed, 10 Jul 2013 11:30:16 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/10/e5889de69da5e4b98de588b0/</guid>
      <description>来杭州也有六天了初步融进了现在这个团体。 住的是玉泉后面的去年旅社，据说只能住到20号，后面就要自己找地方住，不知道找不到地方会怎么样。学校旁边这边的房子真的是暴利出租啊，明显都是一户户普通人家的房子，硬是给改造成了宾馆，价格也是死贵死贵的，真心是抢钱啊。杭州这边的住房到底是有多紧张啊？ 干活的地方离学校很远，不过好在有班车。每天七点半起床，八点半坐上班车，九点半才坐在公司的椅子上开始做正事。也行是因为这边大部分都是学生的原因吧，大家似乎没有太多的压力，所以也感受不到特别大的紧迫感，不存在加班的概念。但是大家每天回去的时候也会很累，因为每天的努力纯粹是为了自己的学习，我相信也行表面看不出来，但是大</description>
    </item>
    
    <item>
      <title>毕业   ——毕业季与毕业旅行</title>
      <link>https://wonderflow.info/posts/2013/07/03/e6af95e4b89a-e6af95e4b89ae5ada3e4b88ee6af95e4b89ae69785e8a18c/</link>
      <pubDate>Wed, 03 Jul 2013 12:51:50 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/07/03/e6af95e4b89a-e6af95e4b89ae5ada3e4b88ee6af95e4b89ae69785e8a18c/</guid>
      <description>我一直久久不肯提起笔，写下这个必须写下来以告慰自己大学四年青春时光的东西。是因为不知道以什么基调，来写下这样一篇文章。无论是忧愁不舍、眷恋怀念，亦或是兴奋开心、乐观自信，都很难单独的用来表述我们的青春，我们的大学。而一篇短短千字、甚至洋洋洒洒万字的文章都无法尽数那些人、那些事。尽管如此，我还是坚持要写写我这段日子的回忆，趁他们还没有被我忘记。 说实话，直到年级开毕业晚会的那会，我都没有即将毕业了的觉悟，仿佛一切照旧，迎来的只是一个再正常不过的暑假而已。然后在学位授予仪式的那个晚会上，在那个毕业视频的感染下，才强烈意识到，也许这一生，和那些或普通、或亲密、或熟悉、或陌生的朋友，就再也没有机会见面了</description>
    </item>
    
    <item>
      <title>年年岁岁，几多变化</title>
      <link>https://wonderflow.info/posts/2013/03/15/e5b9b4e5b9b4e5b281e5b281efbc8ce587a0e5a49ae58f98e58c96/</link>
      <pubDate>Fri, 15 Mar 2013 05:51:49 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/03/15/e5b9b4e5b9b4e5b281e5b281efbc8ce587a0e5a49ae58f98e58c96/</guid>
      <description>好久没来了，突然想来写点东西。不知道还有多少人在关注着我的博客，实在对不住大家。 2012年大家热烈讨论的世界末日仿佛还在耳边，一转眼2013年的春天都已经到了。那时刚退役然后毕业后的去向也定了下来，仿佛压在心上的事情突然消失了，然后就让自己好好放纵了一把。花了很多时间在玩魔兽世界，这确实是一款不错的游戏。玩了将近三个月，从一个菜鸟到一个团队指挥。游戏里面让你充分体验了团队协作的感觉，但是也极为鲜明的表现出了一个团队会出现什么样的问题。 一个团队要成功，团结是尤为重要的，但是大多数团队都是团结的，但却依然会失败。总结来说我觉得存在以下几点因素。 1、不充分的准备。好多人其实玩游戏的态度并不端正，老是</description>
    </item>
    
    <item>
      <title>学车首记</title>
      <link>https://wonderflow.info/posts/2012/11/26/e5ada6e8bda6e9a696e8aeb0/</link>
      <pubDate>Mon, 26 Nov 2012 04:52:47 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/11/26/e5ada6e8bda6e9a696e8aeb0/</guid>
      <description>今天碰到一个哥们，心态真好。 他说：“反正也没什么事情，在这和一帮大人小孩聊天扯谈，轮到了就开一把，其实挺不错的。” 以前觉得自己耐心很好，现在慢慢发现，自己其实是个性子非常急的人。 性子急容易鲁莽。急着让车开起来，结果却熄火了；急着联系外校的老师准备做毕设，结果本校却通不过；急着做好事，结果却没了礼貌。 那些给人感觉很放心的人，都是沉稳而淡定从容的人。 凡事都要淡定啊。 学车，亦是学做人。</description>
    </item>
    
    <item>
      <title>记网络综合实验报告手写</title>
      <link>https://wonderflow.info/posts/2012/10/27/e8aeb0e7bd91e7bb9ce7bbbce59088e5ae9ee9aa8ce68aa5e5918ae6898be58699/</link>
      <pubDate>Sat, 27 Oct 2012 15:56:46 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/10/27/e8aeb0e7bd91e7bb9ce7bbbce59088e5ae9ee9aa8ce68aa5e5918ae6898be58699/</guid>
      <description>大四的第一次手写作业，就是这个网络综合实验报告手写了。 怎么说呢，这个网络综合实验本身其实就是两个星期的酱油而已，真正学到的东西，估计也就是做网线了，其他就不提了。 但是这个实验做完以后，陈老师一反往日不管我们是不是去上课的常态，极为较真的让我们把这将近五十页的报告，用手写版的抄出来，实在是让人费解啊。 从晚上7：00开始，到11:00，正好四个小时，我跟翔子一起听着音乐，疯狂的抄着报告，宿舍其他成员直接组队去打掼蛋了，嘿嘿，还挺带感的。 以上，只是无责任流水账吐槽而已，其实陈老师，在我心里还是个好老师！ 然后开始扯淡。 阿森，方老师，方易凡组成的Tree队，在上周天津赛区，就这么结束了他们本赛季的最后一</description>
    </item>
    
    <item>
      <title>应该有所信仰</title>
      <link>https://wonderflow.info/posts/2012/10/18/e5ba94e8afa5e69c89e68980e4bfa1e4bbb0/</link>
      <pubDate>Thu, 18 Oct 2012 15:28:35 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/10/18/e5ba94e8afa5e69c89e68980e4bfa1e4bbb0/</guid>
      <description>好久没写博客了，感觉上应该来更新点东西，于是就来了。 前段时间忙保研，接着马上就去长春赛区比赛，前半个月大部分的时间不在学校。 比赛比的不是很理想，感觉自己压力太大，其实真的是想的太多了，想的太多，就容易负担太重，然后脑子就一片空白，结局很惨，其实也是意料之中，还好老高挺住了。 之前一直问星姐，找工作之类的事情会不会影响比赛？他说不影响啊，面试算法也是算法的一种嘛，静下心来好好看看没坏处。 我倒是信誓旦旦的说自己一定会以比赛为重，会等比完赛再来管这些事情。 星姐告诉我，平时训练的时候可以这么想，等到比赛的时候，一定不要看得太重。 看来星姐是说对了一半啊，大四那么多前途相关的事情，真正前途未定的时候，怎么可</description>
    </item>
    
    <item>
      <title>&#39;Preparing for my interveiw in the near future &#39;</title>
      <link>https://wonderflow.info/posts/2012/10/02/preparing-for-my-interveiw-in-the-near-future/</link>
      <pubDate>Tue, 02 Oct 2012 14:01:13 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/10/02/preparing-for-my-interveiw-in-the-near-future/</guid>
      <description>Today，I chat with my school sister Miss Hanli，and scarely found that i&amp;rsquo;m supposed to be asked a lot of problem that i’m surely ignored in usual .
For example i&amp;rsquo;ll be asked the author of a lot of famous computer science books，how can i remember those things ？But i have to 。
So today I list some of them here ： 《Computer Networking: A Top-Down Approach》written by James F. Kurose 《TCP/IP Protocol Suite》 written by Behrouz Forouzan 《Operating System Concepts 》 written by Abraham Silberschatz 《Principles of Computer Organization》 written by zhanggongxuan , guyihe 《programming pearls》 written by Jon Louis Bentley 《Introduction to Algorithms》 written by Thomas H. Cormen 《hackers and painters》written by Paul Graham 《modern operating systems》written by Andrew S. Tanenbaum 《the art of Unix programming》written by Eric S. Raymond and so on.. this really remind me to respect the author of a famous book, as they are so great to give the word such great books!
then maybe i need to introduce myself in English. So? let&amp;rsquo;s begin:
Hello, my name is Sunjianbo. i come from wuxi jiangsu province。That‘s really beautiful place and not far from hangzhou。I major in network engineering in the computer science college of nanjing university of science and technology！
Before I come in to the university I love computer very much，especially computer games you know。But after my first year of senior school， I become interested in computer algorithm 。 So I joined our school ACM/ICPC training team. I worked hard there and dived into the interesting algorithms. Another year later, i become the team leader of the ACM/ICPC training team.
I have also participate in the 2011 ACM/ICPC Asia Shanghai regional contest ， and finally got a bronze medal。And several days later I&amp;rsquo;ll participate the 2012 ACM/ICPC Asia changchun regional contest。
As I have spent almost three years of my college life in ACM team ， I am stronger at C++ programing 、 data structure and common algorithms.</description>
    </item>
    
    <item>
      <title>谁校对时间，谁就会瞬间变老</title>
      <link>https://wonderflow.info/posts/2012/10/01/e8b081e6a0a1e5afb9e697b6e997b4efbc8ce8b081e5b0b1e4bc9ae79eace997b4e58f98e88081/</link>
      <pubDate>Mon, 01 Oct 2012 15:12:18 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/10/01/e8b081e6a0a1e5afb9e697b6e997b4efbc8ce8b081e5b0b1e4bc9ae79eace997b4e58f98e88081/</guid>
      <description>又到了一年一度的国庆长假了，虽然很多事情压在心里没有解决，但还是决定回家休息几天，从爸妈这里吸收点正能量，平复一下自己烦躁的心，挺好的。 到了几家亲戚吃饭，发现依旧是那些长辈们在忙碌，只是样子慢慢变化了。像“两鬓斑白的头发”、“满脸的皱纹”这种以前只在小学作文里见到的桥段，竟如此深刻的出现在了我的眼前。然后发现，一些大点的哥哥姐姐们都纷纷有了孩子，那些以前感觉非常年轻的伯伯、阿姨们，现在都已经成了爷爷奶奶，那些曾经不被重视的哥哥姐姐们的言论，如今也受到了父辈们的尊重。“用功”、“读书”、“上学”这样的字眼也慢慢被“工作”，“结婚”，“带孩子”这样的字眼代替。仿佛生活的重心也从上一辈，渐渐交接到了</description>
    </item>
    
    <item>
      <title>linux多线程编程pthread</title>
      <link>https://wonderflow.info/posts/2012/09/28/linuxe5a49ae7babfe7a88be7bc96e7a88bpthread/</link>
      <pubDate>Fri, 28 Sep 2012 03:24:16 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/09/28/linuxe5a49ae7babfe7a88be7bc96e7a88bpthread/</guid>
      <description>在linux下面使用多线程编程要用到pthread.h头文件，因为linux是不存在线程概念的，所以它其实是用进程模拟线程，产生出线程的效果。即linux中的多线程实际上是多进程。 那么为什么linux下有了进程还要再引入线程呢？原因有很多，首先，线程小巧，不需要单独分配地址空间，也不需要维护各种数据表单，然后线程间共享数据，通信起来非常方便. 不过，正因为linux下线程共享数据，如果线程胡乱修改数据的话，会出现一些灾难性的错误，所以就需要操纵系统中所强调的同步、互斥机制来控制。 除了上述一些区别，进程和线程还有如下共同的一些优点： 提高应用程序响应。这对图形界面的程序尤其有意义，当一个操作耗时很长</description>
    </item>
    
    <item>
      <title>Lucky or Unlucky？</title>
      <link>https://wonderflow.info/posts/2012/09/20/lucky-or-unluckyefbc9f/</link>
      <pubDate>Thu, 20 Sep 2012 17:01:13 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/09/20/lucky-or-unluckyefbc9f/</guid>
      <description>老高感到最近很幸运，保研差点来不及准备，所幸最后还是把材料弄好了，而不是被蒙在鼓里；前额被锐利的东西刺伤了，所幸当时刺到的是前额，不是眼睛。 我感到最近很幸运，因为绩点低而被各种鄙视，但是所幸只是被鄙视，真正羡慕我得到这个机会的人很多。 保研失败的同学说：我可以安安心心考研了，我可以安安心心工作了。 保博士研究生的同学说：我保研成功了，至少不用考研了。 ——————————————— 只有一个人最近很忧郁： 一直很努力，很努力 我们笑他上课像个坚果，每次都坐第一排假装好好学生 他摸着头懵懵懂懂，即使听不懂内容也相信态度决定成果 考试前前后后，自习早出晚归 几倍的努力换来一个及格，也是奖杯 坚持着他的坚持，落寞着他的</description>
    </item>
    
    <item>
      <title>努力工作，就是修行</title>
      <link>https://wonderflow.info/posts/2012/09/16/513/</link>
      <pubDate>Sun, 16 Sep 2012 15:14:14 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/09/16/513/</guid>
      <description>这两天真是大起大落，让我深刻的思考了关于读研还是工作的问题。 昨天就知乎上看到一个问题：“人为什么要努力工作？。”今天晚上，看到了好多答案。其中一个得到赞成票最多的答案，感动了我，他说，“努力工作，就是修行。” 九月中旬，各专业都开始计算保研名额，各地的校园招聘也陆陆续续开始了。因为之前已经在百度的提前批次面试过了，所以自己倒也不急。每天悠闲的看看书，学学python，刷刷题，日子过的倒也开心。谁知前几天关于保研名额开会，得知推免外校我竟然也有那么一些机会。然后我就开始纠结了，以前，我总会跟别人扯淡，说关于保研和工作么，很简单的哇，本校肯定不如找工作，有机会保外的话，一定不能浪费机会。直到机会真的</description>
    </item>
    
    <item>
      <title>九月十日记</title>
      <link>https://wonderflow.info/posts/2012/09/10/e4b99de69c88e58d81e697a5e8aeb0/</link>
      <pubDate>Mon, 10 Sep 2012 13:47:53 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/09/10/e4b99de69c88e58d81e697a5e8aeb0/</guid>
      <description>达者为师，首先祝全天下的教师和非以教师为职业但是分享过知识的人，节日快乐。 然后开始正文： 今天是教师节，也是生产实习出去参观的第一天，也是老妈来南京开会的日子，所以我这一天倒是过得蛮充实。 早晨在大一新生军训时嘹亮的口号声中朦朦胧胧的被吵醒。然后就去四工听亚信联创的一个HR过来给我们宣讲，讲了一上午。 边看Python Web边听亚信联创的HR给我们讲软件工程的各种流程，倒是保持了我一贯的学习习惯。陆陆续续听了一些，也算是明白了亚信联创的一些公司背景。 总的来说亚信联创是一家服务于传统三大网络运营商（电信，移动，联通）的一家软件公司。在南京规模比较大，最近盖了一栋很大的楼，正在装修。 下午坐大巴去亚信联创</description>
    </item>
    
    <item>
      <title>我的字符串报告（AC自动机详，后缀数组无）</title>
      <link>https://wonderflow.info/posts/2012/09/05/e68891e79a84e5ad97e7aca6e4b8b2e68aa5e5918a/</link>
      <pubDate>Wed, 05 Sep 2012 05:45:23 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/09/05/e68891e79a84e5ad97e7aca6e4b8b2e68aa5e5918a/</guid>
      <description>上个学期开学的时候做的字符串报告，觉得还有些价值，做了些补充发上来，也许以后用得着。 1 KMP 1.1 概念： KMP是一种用来处理字符串匹配的算法。通俗的讲就是给你一个串A（ababababbc）和一个串B（ababbc），问你A串中是否包含B串。 解决这类问题的朴素算法就是枚举A串开始的位置，然后逐个位置对B串进行匹配。这样的算法复杂度是O（n*m）。而这里我们要介绍的KMP算法，就是解决这类问题最坏复杂度只要O（n+m）的算法。 KMP是由三个人共同提出的，他们的名字分别是Knuth、Morris、Pratt，这也是为什么这个算法叫KMP的原因，就是取了三个人的首字母。 1.2 原理： 现假设我们有两个串A（abab</description>
    </item>
    
    <item>
      <title>《黑客与画家》读书笔记</title>
      <link>https://wonderflow.info/posts/2012/09/03/e3808ae9bb91e5aea2e4b88ee794bbe5aeb6e3808be8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Mon, 03 Sep 2012 14:22:32 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/09/03/e3808ae9bb91e5aea2e4b88ee794bbe5aeb6e3808be8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>这又是我读到的一本神奇的书，他坚定了我的世界观。 说起这本书，还是在活动室溜达的时候,无意中在黄典典桌上发现的。当时对这本书也是慕名已久了，然后随手一翻就发现停不下来了，就这样，连着两三天，每天一有空就看，不知不觉就看完了。这真是一本IT界思想盛宴的书啊。 说起这本书，不得不提一下本书的作者，本书其实是硅谷创业之父Paul Graham的文集。而Paul Graham又是何许人也呢？ 他是世界上首个互联网应用程序Viaweb开发人之一，也是viaweb公司的创始人，后被雅虎收购改名为&amp;quot;Yahoo!Store&amp;quot;。开创了天使投资的模式，被《福布斯》杂志喻为“撼动硅谷的人”。目前为止扶持过</description>
    </item>
    
    <item>
      <title>linux is free, what about me?</title>
      <link>https://wonderflow.info/posts/2012/08/31/linux-is-free-what-about-me/</link>
      <pubDate>Fri, 31 Aug 2012 11:31:20 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/31/linux-is-free-what-about-me/</guid>
      <description>Today is the last day of the August , also the last day of my first week in senior life. Before, I don&amp;rsquo;t know what I need to do , what I want to be, so I could play lots of games and do nothing everyday. Now, I know what I want and also know what I have to face that make me so frustrated . Everyday having so many works to do , so many plans to finish , so many unwilling smiles and hands to give, I begin to change to a guy that I totally don&amp;rsquo;t want to be! Sometimes I envy that children can cry, girls can cry , women can cry , but man. I have so much pressure but I can&amp;rsquo;t cry to drop them off. Sometimes I will cry unbridledly in dreams , I cry so heavy in my dreams even wake me up and find tears soaked my pillow. I don&amp;rsquo;t know why I&amp;rsquo;m so sad in dream and even scared. But my body tell me that I am tired. Few days ago see a girl write a poem called 《write in a lonely day》 that really warmed me up. After reading it , I want to say so much that not only you, a girl ,but also me , a man ,need someone too. The one who can see my weakness clearly and give me a hand when I need ; the one who can cheer me up and give me a encouraging story when I am down . But I know I am a man, a man should solve all the things by himself. So I don&amp;rsquo;t even extravagant hope someone can listen my nagging. I won&amp;rsquo;t tell either. What I can</description>
    </item>
    
    <item>
      <title>《unix&amp;linux大学教程》 推荐</title>
      <link>https://wonderflow.info/posts/2012/08/31/e68ea8e88d90/</link>
      <pubDate>Fri, 31 Aug 2012 05:54:35 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/31/e68ea8e88d90/</guid>
      <description>最近把这本书看完了，觉得讲述的非常好，有志于学习linux的青年们都该阅读一下，着实是一本linux的入门好书。 这是一本神奇的书。作者用诙谐幽默而又细致详实的手法，书写了这本让人一拿起来开始阅读就不愿意放下的书。也许你以前可能会觉得技术书籍都是枯燥乏味的，但是看完这本书，你绝对会对这种思想改观。 作者不再像是对着纸张陈述一个技术事实，而更像一个老师，一个老朋友在向你讲述linux里面的这些细节故事。除了技术以外，他会告诉你每个名称是怎么来的，这里面包含了一个什么样的故事背景，又包含了一种什么样的思想。在这样的描述下，你可能很容易的就记住了这些指令的用法，并被linux自由的精神所深深的折服。 li</description>
    </item>
    
    <item>
      <title>《编程之美》读书笔记</title>
      <link>https://wonderflow.info/posts/2012/08/28/e7bc96e7a88be4b98be7be8ee8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Tue, 28 Aug 2012 12:31:10 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/28/e7bc96e7a88be4b98be7be8ee8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>总的来说，编程之美是一本讲面试算法的书，至于面试问算法到底问到的几率有多大，我不知道。不过这本书本身的很多问题是非常有意思的。 0.1、前言趣题： 房间里有三盏灯，屋外有三个开关，分别控制三盏灯，进了房间才能知道哪个灯泡是亮的，问只进入房间一次，怎么区分哪个开关对应哪个灯？ 这个题的有意思之处在于让你拓宽思维，不要被既定的线路束缚住。区别三个灯泡，一定需要两个条件，一个是灯泡亮否，还有一个条件哪里来呢？答案是温度，灯泡开了一会，表面温度自然就会上升。 0.2、前言感悟： 面试如考试：基础很重要，但是考前看看面试题库也是个不错的选择。 面试就是探讨：多把自己的想法告诉面试官，对问题的思考或许比问题的答案更重</description>
    </item>
    
    <item>
      <title>2012年，我的七夕</title>
      <link>https://wonderflow.info/posts/2012/08/24/2012e5b9b4efbc8ce68891e79a84e4b883e5a495/</link>
      <pubDate>Fri, 24 Aug 2012 14:02:06 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/24/2012e5b9b4efbc8ce68891e79a84e4b883e5a495/</guid>
      <description>最近一直没有更新博客，不是因为不想写，而是没时间，太忙了。 想不到我的找工作之旅就这么结束了，从一面、二面到最终到北京百度的第三面，这真是一段有意思的旅程，也是属于我一个人的七夕节。别人都说跟妹子相亲相爱的在大街上行走，我却在七夕独自一个人背着个包穿梭于北京、南京，地铁、公交，公司、学校，我该是有多么热爱自己的事业啊！擦泪，其实我自己也不想的。。。。 不管怎么说，我的找工作之旅总算是告以段落了。如果要说总结什么经验的话，等我正式签到了工作再说吧，现在一切都属于等消息中，就不谈了。 那天中午，接到电话，纠结了一会，就果断决定星夜赶去北京了。 软卧其实挺舒服的，就是下铺带小孩的夫妇让小孩凌晨一点的时候才停</description>
    </item>
    
    <item>
      <title>败者树</title>
      <link>https://wonderflow.info/posts/2012/08/19/e8b4a5e88085e6a091/</link>
      <pubDate>Sun, 19 Aug 2012 03:51:11 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/19/e8b4a5e88085e6a091/</guid>
      <description>在网上看到有人画了一张原理图，一目了然，非常专业～</description>
    </item>
    
    <item>
      <title>No Content Found</title>
      <link>https://wonderflow.info/posts/2012/08/17/445/</link>
      <pubDate>Fri, 17 Aug 2012 12:28:45 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/17/445/</guid>
      <description>这哥们太给力了，面试题集锦； 不管面试不面试，看看总归每坏处，何况题目都还挺有趣的～</description>
    </item>
    
    <item>
      <title>第一次电话面试经历</title>
      <link>https://wonderflow.info/posts/2012/08/16/e7acace4b880e6aca1e794b5e8af9de99da2e8af95e7bb8fe58e86/</link>
      <pubDate>Thu, 16 Aug 2012 12:30:39 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/16/e7acace4b880e6aca1e794b5e8af9de99da2e8af95e7bb8fe58e86/</guid>
      <description>昨天下午做自己组的多校比赛的时候，突然接到百度电话说要电话面试。时间就是第二天的上午11点。当时我还挺惊讶的，想不到我的求职历程这么早就开始了。那么就这么开始吧，淡定点最好。 当时傍晚的时候给星姐打电话，问电话面试要注意点什么，问到最后说，要是进不了百度怎么办。星姐说，那就换一家呗。是啊，天下之大，公司很多，只要有真才实学，哪都去得了，不用太在意的。后来在宿舍里，边看着“面试宝典”边跟好吟、竞哥哥他们八卦扯淡，也就不知不觉到了睡觉时间，看来自己还是老样子，从小到大都没有临时抱佛脚的能力。 说是这么说，不过今天上午被电话面试的时候确实还是有点紧张的，当时一上来就问一个简单的算法题，感觉在《编程之美》</description>
    </item>
    
    <item>
      <title>STL Containers 之 vector</title>
      <link>https://wonderflow.info/posts/2012/08/10/stl-containers-e4b98b-vector/</link>
      <pubDate>Fri, 10 Aug 2012 12:41:30 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/10/stl-containers-e4b98b-vector/</guid>
      <description>我觉得，vector是STL中最常用的容器，没有之一。 因为它简单，安全，也容易理解。实际上它就是一个刚学C++时我们梦寐以求的动态数组，大小不需要一开始的时候定，而又不像链表操作起来那么麻烦。 先说一下最简单的几个用法吧： 比如说你要创建一个一维数组，数组元素是一个结构体。（为什么用结构体？因为结构体都会了的话，int之类的，就简单了。） 在示例代码中用注释的方式讲解一下各种vector函数的用法。 # include # include using namespace std; struct Node{ int x,y; Node(){x = 30;} Node(int x,int y):x(x),y(y){}//构造函数 }; int main(){ vectormyvector; //定义一个vector数组 for(int i=0;i&amp;lt;9;i++){ myvector.push_back(Node(i,1+i)); //插入一个元素 } myvector.pop_back();//与之对应的pop_back是</description>
    </item>
    
    <item>
      <title>STL Algorithms 之 unique</title>
      <link>https://wonderflow.info/posts/2012/08/10/stl-algorithms-e4b98b-unique/</link>
      <pubDate>Fri, 10 Aug 2012 10:40:13 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/10/stl-algorithms-e4b98b-unique/</guid>
      <description>C++的文档中说，STL中的unique是类似于这样实现的： template &amp;lt;class ForwardIterator&amp;gt; ForwardIterator unique ( ForwardIterator first, ForwardIterator last ) { ForwardIterator result=first; while (++first != last) { if (!(*result == *first)) // or: if (!pred(*result,*first)) for the pred version *(++result)=*first; } return ++result; } 仔细一看就知道，它并不是帮你直接把一个数组中所有重复的元素除去，而是对数组扫描一次，只看当前元素和前面一个元素，如果当前值和前面的值相等，那么跳过，否则就把这个值算上，迭代器递增，最后返回给你一个位置，表示我扫描到多少个当前值与其前面一个元素值不同的元素。 所以，要真正利用好unique，我们必须先对我们所需要进行unique操作的数组排序，然后再使用unique。 这样以后其实还是不满足我们的要求的，因为实际上unique函数实现的只是把不同的元素“unique”放</description>
    </item>
    
    <item>
      <title>几种简单类型的动态规划</title>
      <link>https://wonderflow.info/posts/2012/08/08/e587a0e7a78de7ae80e58d95e7b1bbe59e8be79a84dp/</link>
      <pubDate>Wed, 08 Aug 2012 10:44:28 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/08/e587a0e7a78de7ae80e58d95e7b1bbe59e8be79a84dp/</guid>
      <description>今天又被鱼头拉着校验集训队的书，正好看了一下动态规划(DP)这块，顺便总结一下。发现几道POJ上的例题正好是自己没有做过的，正好拿来试试手，写写题解。 线性动态规划： 1、最长递增（减）子序列：给出一个数列，求最长不下降（上升）子序列的长度。poj2533 这个经典的DP问题有两种解法，复杂度分别为O（n^2）和O（nlogn）。 O(n^2)的算法比较容易理解，就是用dp[i]表示数列到i位置的最长递增（减）子序列的长度。 第一重循环自然就是枚举i的位置，第二重循环就是从0到i-1，选择一个数字比num[i]小（大）的数的dp值加1，看能否更新dp[i]。 以最长递增子序列为例，就是dp[i] = max(</description>
    </item>
    
    <item>
      <title>字符串的编辑距离</title>
      <link>https://wonderflow.info/posts/2012/08/07/e5ad97e7aca6e4b8b2e79a84e7bc96e8be91e8b79de7a6bb/</link>
      <pubDate>Tue, 07 Aug 2012 14:04:53 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/07/e5ad97e7aca6e4b8b2e79a84e7bc96e8be91e8b79de7a6bb/</guid>
      <description>编辑距离，又称Levenshtein距离（也叫做Edit Distance），是指两个字串之间，由一个转成另一个所需的最少编辑操作次数。 许可的编辑操作包括1、将一个字符替换成另一个字符；2、插入一个字符3、删除一个字符。 根据《柔性字符串匹配》一书的介绍，一共有四种方法。 1、最古老，最灵活的动态规划解法。 2、基于自动机的公式法（常用语错误距离允许较小的情况） 3、用位并行来模拟其他方法。 4、先用简单的条件过滤掉文本中大段编辑距离超过范围的不相关文本，再用其他算法进行匹配。 先介绍一下最基本的动态规划解法。空间复杂度和时间复杂度均为O（n^2）。 正好poj3356就是个这样的题目，有兴趣的可以做一下。 用</description>
    </item>
    
    <item>
      <title>No Content Found</title>
      <link>https://wonderflow.info/posts/2012/08/05/398/</link>
      <pubDate>Sun, 05 Aug 2012 04:51:03 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/05/398/</guid>
      <description>校验集训队的书，发现大家报告的风格还真是各不相同！有的人描述算法通俗易懂，就是口语化非常严重；有的人描述的专业性非常强，看到一段描述，你要转好几个弯，联想好几个知识点才能想通。相比于前者，后者才是真的让我蛋疼啊。。。 大家能猜出来是谁和谁的报告吗，哈哈~</description>
    </item>
    
    <item>
      <title>No Content Found</title>
      <link>https://wonderflow.info/posts/2012/08/03/395/</link>
      <pubDate>Fri, 03 Aug 2012 06:45:12 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/03/395/</guid>
      <description>擦泪！瞬间感觉好坑爹，唉，到了大四还要当苦力啊。。。</description>
    </item>
    
    <item>
      <title>扯 &amp;&amp; 最短路floyd的DP解法解释</title>
      <link>https://wonderflow.info/posts/2012/08/02/e689af-e69c80e79fade8b7affloyde79a84dpe8a7a3e6b395e8a7a3e9878a/</link>
      <pubDate>Thu, 02 Aug 2012 14:42:06 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/02/e689af-e69c80e79fade8b7affloyde79a84dpe8a7a3e6b395e8a7a3e9878a/</guid>
      <description>帮鱼头整理集训队训练教程，据说要出书，瞬间感到压力巨大。就那些平时大家随便写写，只是给自己看看的，非常散漫的解题报告，和专题上很多算法本质都不理解的各种报告组成的一个文档。我真的，压力巨大。那么尽自己力量去整理吧。 整本书的结构就是： 章节（专题介绍-&amp;gt;讲的参差不齐）；子目录（该专题算法介绍-&amp;gt;伪代码(反正不是通俗易懂)）; 子目录：例题-&amp;gt;题意-&amp;gt;思路-&amp;gt;代码（这就导致小半本书代码）。 我也不知道这样是好是坏，是否适合读者入门。反正我最讨厌大段大段贴代码的书了。 然后尽力整理吧，其实这本书倒更像是一个模板库，对于把所有专题都了解过的人，是一本很好的复习资料。我就花了一个晚</description>
    </item>
    
    <item>
      <title>独立博客——我的建站感受（GegeHost）</title>
      <link>https://wonderflow.info/posts/2012/08/02/e78bace7ab8be58d9ae5aea2-e68891e79a84e5bbbae7ab99e6849fe58f97efbc88gegehostefbc89/</link>
      <pubDate>Thu, 02 Aug 2012 07:36:13 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/02/e78bace7ab8be58d9ae5aea2-e68891e79a84e5bbbae7ab99e6849fe58f97efbc88gegehostefbc89/</guid>
      <description>自我建成独立博客以来，已经有了一个月的时光。中间很多朋友问我是怎么建站的，正好趁此次机会跟大家聊聊我的感受和经历。 记得很小很小的时候，就特别想知道怎么自己建一个网站，那时学了html，可是无论怎么问，也问不到怎么让别人在网上看到自己用html做的网站的方法。直到后来，别人跟我说，怎么申请免费空间，怎么写博客，推荐我网易、百度、QQ等等公司的空间。很久一来我都一直觉得，有一个自己的顶级域名好像是特别神圣、特别困难的事情。因为无论我怎么问，都只能问到、弄到那种二级域名、依附在别人那的小地方。 到了大学以后，才对怎么建立网站，怎么独立的在网上发布自己的思想言论等等这些概念有了清晰的认识。不过刚开始其实</description>
    </item>
    
    <item>
      <title>暑假留校</title>
      <link>https://wonderflow.info/posts/2012/07/29/e69a91e58187e79599e6a0a1/</link>
      <pubDate>Sun, 29 Jul 2012 17:18:08 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/29/e69a91e58187e79599e6a0a1/</guid>
      <description>今天做完浙大月赛，嘉炜就回去了，老高也要回去一段时间，wonderflow要分别一段时间了~在家里也不能太放松啊亲们。 老妈一直说要我回家，说我不恋家，说我不是个好队长不让队友回家过暑假，说我该多休息。。。 其实我感觉我很恋家，比起那些一年就回一次家的同学们，我每个月都回去一次，虽然有时只有一两天。就是这样的频率，我还是会时常想起老爸烧的鸡汤和老妈的唠叨。以前我在家的时候总是嫌我无所事事，怎么终于我准备干一番事情的时候，又这么舍不得了呢，呵呵~ 然后关于我不让队友回家这事，今明两天嘉炜和老高都回家了，我就不说什么了。 关于休息，我觉得我休息的挺好的，每天刷题，累了看看电影电视剧，睡在活动室有空调。睡得</description>
    </item>
    
    <item>
      <title>fedora装机操作记录</title>
      <link>https://wonderflow.info/posts/2012/07/28/fedorae8a385e69cbae6938de4bd9ce8aeb0e5bd95/</link>
      <pubDate>Sat, 28 Jul 2012 16:04:20 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/28/fedorae8a385e69cbae6938de4bd9ce8aeb0e5bd95/</guid>
      <description>最近ubuntu玩腻了，并且觉得风格太红，不适合我，就决定换个linux发行版试试，正好小方老师tsfn用的就是fedora，然后就一路请教它，把fedora装了一下。 1、搞张光盘或者烧制一个u盘rom。 2、选择替换之前的linux系统选项（因为我是抱着试一试的心态来的，所以之前已经把东西都备份好了。由此花了我今天大量的时间，让我得以看了几部电影） 3、一路next过去，直到安装好，没什么异常。 4、安装axel、fastestmirror并更新(axel自行google) sudo yum install axel &amp;amp;&amp;amp; sudo yum -y install yum-fastestmirror &amp;amp;&amp;amp; sudo yum upgrade 5、关闭selinux.为什么？ 关掉SELinux:修改/etc/selinux/config。设</description>
    </item>
    
    <item>
      <title>2012多校第一、第二场（hdu4300~hdu4319）</title>
      <link>https://wonderflow.info/posts/2012/07/27/2012e5a49ae6a0a1e7acace4b880e38081e7acace4ba8ce59cbaefbc88hdu4300hdu4319efbc89/</link>
      <pubDate>Fri, 27 Jul 2012 12:59:12 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/27/2012e5a49ae6a0a1e7acace4b880e38081e7acace4ba8ce59cbaefbc88hdu4300hdu4319efbc89/</guid>
      <description>说一下自己搞出来的题目吧，感觉多校其实比较水的，题目也不难，模板题，陈题很多，不过两场我们队的名次都很烂诶，30开外了都，抗不住啊！出现的问题就是队里的模板太少、不全。不过也好，做一场补一场的模板。 hdu4300《Clairewd’s message》是个字符串，利用next数组求解，小trick就是next数组求出来的值要小于(len-1)/2才取。即：while(len-next[dx]&amp;lt;=(len-1)/2)dx = next[dx]; #include&amp;lt;iostream&amp;gt; #include&amp;lt;cstring&amp;gt; #include&amp;lt;cstdio&amp;gt; using namespace std; int map[30]; int len; int s[101000]; int next[101000]; char str[101000]; void get_next() { int i,j;i=0;next[0]=-1;j=-1; while(i&amp;lt;len) { if(j==-1||map[s[j]]==s[i]) { ++i;++j; next[i]=j; } else j=next[j]; } } int main() { int T; scanf(&amp;quot;%d&amp;quot;,&amp;amp;T); while(T--){ scanf(&amp;quot;%s&amp;quot;,str); len = strlen(str); for(int i=0;i&amp;lt;len;i++){ map[str[i]-&#39;a&#39;] = i; } scanf(&amp;quot;%s&amp;quot;,str); len = strlen(str); for(int i=0;i&amp;lt;len;i++){ s[i] = str[i] - &#39;a&#39;; } get_next(); // cout&amp;lt;&amp;lt;next[len]&amp;lt;&amp;lt;endl; int dx = len; while(len-next[dx]&amp;lt;=(len-1)/2)dx = next[dx]; // cout&amp;lt;&amp;lt;next[dx]&amp;lt;&amp;lt;endl; for(int i=0;i&amp;lt;len-next[dx];i++){ printf(&amp;quot;%c&amp;quot;,s[i]+&#39;a&#39;); } for(int i=0;i&amp;lt;len-next[dx];i++){ printf(&amp;quot;%c&amp;quot;,map[s[i]]+&#39;a&#39;); } printf(&amp;quot;\n&amp;quot;); } return 0;</description>
    </item>
    
    <item>
      <title>集训日志第十一篇——集训结束</title>
      <link>https://wonderflow.info/posts/2012/07/25/e99b86e8aeade697a5e5bf97e7acace58d81e4b880e7af87-e99b86e8aeade7bb93e69d9f/</link>
      <pubDate>Wed, 25 Jul 2012 00:26:30 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/25/e99b86e8aeade697a5e5bf97e7acace58d81e4b880e7af87-e99b86e8aeade7bb93e69d9f/</guid>
      <description>暑假集训就这么进行到了最后一天，真快。感觉每天的时间就是融汇成了上午一道水题刷完，然后一道难题刷到下午两三点，有时debug到四五点，或者再刷一道题目到晚上八、九点，然后再换一道题目。有时比赛，刷的题目就更少了，比赛中的水题其实没有收获了，所以也不算刷的题目。 果然，一个暑假集训的时间还是不够刷完狗狗四十题啊，有些题目实在没有想法。昨天填那张集训调查表，表上有个问题，问本次集训最大的收获是什么，然后我发现，自己一没有开拓什么新的专题，二没有把自己以前的专题深入，实在汗颜，感到没什么收获。后来仔细一想，倒也不是全无所获，刷狗狗四十题到今天，感觉自己的勇气有了莫大的提升。再恶心的题目，只要有了想法和</description>
    </item>
    
    <item>
      <title>集训日志第十篇——扛不住的网管</title>
      <link>https://wonderflow.info/posts/2012/07/22/e99b86e8aeade697a5e5bf97e7acace58d81e7af87-e6899be4b88de4bd8fe79a84e7bd91e7aea1/</link>
      <pubDate>Sun, 22 Jul 2012 16:28:07 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/22/e99b86e8aeade697a5e5bf97e7acace58d81e7af87-e6899be4b88de4bd8fe79a84e7bd91e7aea1/</guid>
      <description>天气实在太热了，没有空调的地方实在不适宜人类居住。每天深夜1点才能睡着，6点就被热醒的日子迫使我搬到活动室居住。有空调才有睡眠质量啊。 然后活动室的网络之前被我拆了换到机房去，现在自己要住过来，不能没网啊，然后又开始搭。路由器是现成的，活动室好多废弃不用的路由器，其实还有一两个是好的，不能浪费。然后瞎鼓捣，果断连不上网。 然后问周太后，太后说之前一共试了三个口，两个口没用，一个口连到judge室的网。然后我就纳闷了，之前记得的好像是左上角那个口是对的，怎么现在又不行了呢。 鼓捣了好久还是失败，路由器什么的配置起来都简单的，就是把它重置一下，然后进入路由器上面写的那个配置的ip口进行配置就可以了。但是</description>
    </item>
    
    <item>
      <title>集训日志第九篇——我们都是脆弱的生物</title>
      <link>https://wonderflow.info/posts/2012/07/21/e99b86e8aeade697a5e5bf97e7acace4b99de7af87-e68891e4bbace983bde698afe88486e5bcb1e79a84e7949fe789a9/</link>
      <pubDate>Sat, 21 Jul 2012 17:02:30 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/21/e99b86e8aeade697a5e5bf97e7acace4b99de7af87-e68891e4bbace983bde698afe88486e5bcb1e79a84e7949fe789a9/</guid>
      <description>天气渐渐又热了起来，让人烦躁。集训也接近尾声了，好多人都松懈了下来，爱来不来的样子，我也不好说什么。 其实集训只是个形式，真正学到多少，还是要看自己的努力程度。大学这样的地方，实在不应该有人来强迫学习。有时候看着一帮考研的同学，每天早晨7：00起床占座，然后中午睡一会，晚上7、8点就回来了，玩玩游戏看看电视剧。还不如一觉睡到8：30，学到10：30来的舒服呢。然后三天打渔，两天晒网的，估计他们还是不知道自己要的是什么。不过人啊，都是脆弱的动物，好多时候都会怀疑自己所坚定的相信的东西，是否是对的。 谁都免不了沮丧，尤其是选择了一条艰难的道路。看过一个记者写的博客，她说她采访过很多各色各样牛逼厉害的人</description>
    </item>
    
    <item>
      <title>集训日志第八篇——我谈组队</title>
      <link>https://wonderflow.info/posts/2012/07/18/e99b86e8aeade697a5e5bf97e7acace585abe7af87-e68891e8b088e7bb84e9989f/</link>
      <pubDate>Wed, 18 Jul 2012 16:56:42 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/18/e99b86e8aeade697a5e5bf97e7acace585abe7af87-e68891e8b088e7bb84e9989f/</guid>
      <description>集训到了最后一周，基本上组队就要确定下来了。今年初步组队比较早，感觉组的也还不错。不过总是存在一些问题，毕竟现实不像解题怎么样都能求出最优解，人人满意的方案几乎不存在。鱼头也不容易，确实挺为难。那么我就趁着集训日志的时候，来谈谈我对组队的看法吧。 在我看来，一个优秀的队伍必然存在这样几点素质： 1、实力，不管是整体的实力还是个人的爆发力，实力是一个队伍最基础的元素 2、团结，三个最强的人组在一起确实不会弱，但是要保证每个人的能力充分的发挥，那么一个团队的团结必不可少。如果在比赛的时候你要敲题我要抢键盘，你要debug我觉得你的思路就是错的，那就真的没办法了。无论如何，和谐很重要。 3、配合，其实三个人</description>
    </item>
    
    <item>
      <title>我的大三</title>
      <link>https://wonderflow.info/posts/2012/07/16/e68891e79a84e5a4a7e4b889/</link>
      <pubDate>Mon, 16 Jul 2012 16:19:05 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/16/e68891e79a84e5a4a7e4b889/</guid>
      <description>前端时间看见肃驰写了篇日志总结了下自己的大学三年，DZ今天也回来开始考研复习了。前面考试一结束就进入了集训，也没感觉日子有什么变化，但是到了今天，很多信号告诉我，大三真的结束了。大四来了。 那么我的大三到底做了点什么呢？大三上已经在上学期期末的时候记录的了。 大三下，大致罗列一下：提前到学校不止一周，学了一半的车，搞了个字符串报告，刷了点题。然后强迫自己完成鱼头布置的大加题计划，后来果然搁浅了。方易凡戏称说这是大跃进计划，我跟薛斌都哈哈大笑了好久。后来就开始上课了，平时课上的时候看小说，课后开始陆陆续续刷USACO。对脚本语言产生了兴趣，学了一下python。不间断的打打dota。周末都是在活动室</description>
    </item>
    
    <item>
      <title>集训日志第七篇</title>
      <link>https://wonderflow.info/posts/2012/07/15/e99b86e8aeade697a5e5bf97e7acace4b883e7af87/</link>
      <pubDate>Sun, 15 Jul 2012 16:12:17 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/15/e99b86e8aeade697a5e5bf97e7acace4b883e7af87/</guid>
      <description>今天下午挺郁闷的，一个简单的DP题debug了很久。最后实在扛不住了，就找阿森帮忙检查一下错误。直到后来才发现是数组开小了。 当时另外有人来找森哥问一下一个难题的思路，其实是不是难题我也不知道，姑且算作是难题吧，这样思路的价值会高一点。然后我找阿森帮忙调试这件事情就被鄙视了，说法是，阿森这样的人才，不应该浪费在debug这种事情上，而应该用做传授思路上。 当时本来就很郁闷的一直找不出错误的原因，再被这么来一下，真的非常生气。 本来这样的事情实在不应该写出来，但是我怕这样的事情憋在心理，以后一个人debug的时候会有心理阴影，就索性写出来了，希望涉及的人不要太介怀，我肯定是写过就忘了，以后看了徒增一笑</description>
    </item>
    
    <item>
      <title>集训日志第六篇 ——十年学会程序设计</title>
      <link>https://wonderflow.info/posts/2012/07/13/e99b86e8aeade697a5e5bf97e7acace585ade7af87-e58d81e5b9b4e5ada6e4bc9ae7a88be5ba8fe8aebee8aea1/</link>
      <pubDate>Fri, 13 Jul 2012 15:23:14 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/13/e99b86e8aeade697a5e5bf97e7acace585ade7af87-e58d81e5b9b4e5ada6e4bc9ae7a88be5ba8fe8aebee8aea1/</guid>
      <description>最近听好多队员都反应说，集训似乎进入的瓶颈期，感到特别疲惫，做不出题目，一直犯困等等。每天早晨准时到来的人也越来越少了。 其实有这个过程也属于正常的情况，几乎人人都会碰到这样的瓶颈吧。就像长跑，再厉害的运动员，中间也会碰到一个高原期，也就是俗称的瓶颈，这个时候他们就会缓缓的深呼吸，调整自己的节奏。而我们搞ACM，其实也是一个长跑。遇到瓶颈的时候，就该调整自己的状态。 那么今天就来励志一把吧。 以前看过徐宥的博客，发现里面有一篇非常好的文章的中文翻译，名字叫《十年学会程序设计》，其英文原文是《Teach Yourself Programming in Ten Years》。讲的就是，要做好一项事业，需要十年的时间，准确的说，是10000个小时。 浙大的</description>
    </item>
    
    <item>
      <title>集训日志第五篇（解题常用方法的总结）</title>
      <link>https://wonderflow.info/posts/2012/07/12/e99b86e8aeade697a5e5bf97e7acace4ba94e7af87efbc88e8a7a3e9a298e5b8b8e794a8e696b9e6b395e79a84e680bbe7bb93efbc89/</link>
      <pubDate>Thu, 12 Jul 2012 16:48:13 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/12/e99b86e8aeade697a5e5bf97e7acace4ba94e7af87efbc88e8a7a3e9a298e5b8b8e794a8e696b9e6b395e79a84e680bbe7bb93efbc89/</guid>
      <description>集训的时光不知不觉，其实已经过去了一半了，十三天。 每天做一到二个题，总结、思考。看重的不是做出的题目是用的什么方法，看重的是怎么想到的这个做题的方法，思路是怎么来的。那么今天顺势总结下思考问题的一些方法。 题目做的多了，就会自然而然的产生一些经验，比如看到数据的范围，就能想到最终的解法是什么复杂度的，然后根据复杂度，就可以套一些模型，一些常用的算法。 再根据常用的方法的多种应用，思考针对该题的解决方案。 这是很常见的一种方法，我喜欢称之为“经验教训”法。 面对一个问题，先从小规模着手，如果这个问题的数据非常小，从1个、2个、3个、、这样以此类推的往多处叠加，那么这个问题的解法会不会思考出来。要知道，如</description>
    </item>
    
    <item>
      <title>集训日志第四篇</title>
      <link>https://wonderflow.info/posts/2012/07/10/e99b86e8aeade697a5e5bf97e7acace59b9be7af87/</link>
      <pubDate>Tue, 10 Jul 2012 16:46:07 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/10/e99b86e8aeade697a5e5bf97e7acace59b9be7af87/</guid>
      <description>今天鱼头组织了第一次组队赛，用的是浙大2010年九月份的月赛。题目质量不错，发现有一份watashi的解题报告，大家可以过去围观，上面还有各题的代码，对于想要赛后AK的队员非常有帮助。 鱼头让我们对照着比赛各个阶段的rank来做下总结，那么就对着rank说吧。 第一个小时的时候，节奏不错，10分钟左右的时候，我和老高讨论出A的水题本质，25分钟的时候敲完A，wa了。中间嘉炜把G题的思路搞了出来同时在我wa了以后开始敲，在47~48分钟，嘉炜AC了G，我和老高也讨论出了A的错误，ans每次要初始化为INF，忘了初始化。 看图片也能发现，第二个小时的时候有点茫然，快速把水题切完后，大家花了一个小时看了一</description>
    </item>
    
    <item>
      <title>集训日志第三篇</title>
      <link>https://wonderflow.info/posts/2012/07/09/e99b86e8aeade697a5e5bf97e7acace4b889e7af87/</link>
      <pubDate>Mon, 09 Jul 2012 16:10:59 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/09/e99b86e8aeade697a5e5bf97e7acace4b889e7af87/</guid>
      <description>按照惯例，每天晚上思考总结一下当天做了什么，其实真的蛮有收获的，当然，也挺有意思的。 有时候也许我们会忍不住问自己，最近这一年来，自己收获了什么。或者是，进了大学的这n年以来，自己学到了什么东西。其实无论是谁，都会这么拷问自己的。这是对自己的一种激励，也是对过往的一种总结。 其实集训期间，我也觉得鱼头有必要每周开个会，让老队员和新队员进行一次深入的交流，新队员讲讲自己这周的收获是什么，老队员分几次，讲讲大学的收获是什么，进了集训队一年的老队员感觉是什么，进了集训队两年的老队员感觉是什么，还有就是老队员一周的收获。 我记得我高中的时候，最喜欢问自己学习的对象，问他们在干什么，包括进了大学以后的好长一段</description>
    </item>
    
    <item>
      <title>集训日志第二篇</title>
      <link>https://wonderflow.info/posts/2012/07/08/e99b86e8aeade697a5e5bf97e7acace4ba8ce7af87/</link>
      <pubDate>Sun, 08 Jul 2012 16:33:30 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/08/e99b86e8aeade697a5e5bf97e7acace4ba8ce7af87/</guid>
      <description>今天发生的事情还挺多的。噢不~准确的说应该是昨天，因为已经过了正午十二点了。那么一下就用昨天这样的时间点来描述吧，省的混淆，哈哈~ 首先值得一提的是，前天孙健回来了，集训对一个名字和我的名字前缀完全匹配的一个队员附着脚伤归队了。然后集训队暑假集训终于到了全员到齐的时候。可惜的是，今天，杨达一又因为家里出了点状况而临时回家了，唉，真是天有不测之风云啊。他这次暑假集训也算是提前结束了，确实有些遗憾，集训队又少了一个记录生活的人。 前天看到他在人人上发表的这篇文章《clap your hands if you want to laugh》。感觉还是非常有意思的，他在末尾提到的“正一”君的典故，我估计是因为他自己的缘故不好意思记录，那么我有必要替</description>
    </item>
    
    <item>
      <title>集训日志第一篇</title>
      <link>https://wonderflow.info/posts/2012/07/07/e99b86e8aeade697a5e5bf97e7acace4b880e7af87/</link>
      <pubDate>Sat, 07 Jul 2012 16:11:22 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/07/e99b86e8aeade697a5e5bf97e7acace4b880e7af87/</guid>
      <description>今天跟薛斌聊天，说到去年暑假集训的时候，我每天都在集训队的论坛里写篇小日志，记录下每天的学习内容之类的。今年也应该有一个。 被他这么一提醒，我倒是也想起了确实是这样的，然后翻看了一下当时写下的东西，发现大部分都是记录自己集训的好玩的地方，或是一些励志的话吧。其实说实话，不是很真实。毕竟放到集训队论坛里这么多认识自己的队员会看，说什么都会有点束手束脚。 而今年刚好开通了自己的博客，所以这次就果断在这里写写了。一来想看的人自然会来到这里看到自己的点点滴滴；二来，想写什么也可以畅所欲言的写，毕竟自己的地盘，也不怕有太多的人会看到。 暑假集训，终于还是进行到了最后一年了啊。 大一刚进来的第一次暑假集训，总感觉</description>
    </item>
    
    <item>
      <title>网络攻防与Python</title>
      <link>https://wonderflow.info/posts/2012/07/04/e7bd91e7bb9ce694bbe998b2e4b88epython/</link>
      <pubDate>Wed, 04 Jul 2012 16:14:02 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/04/e7bd91e7bb9ce694bbe998b2e4b88epython/</guid>
      <description>上个学期学《网络攻防》，《信息安全》。发现自己对网络攻防、信息安全这方面内容还真的挺感兴趣的。 说来也是，学计算机的，谁小时候没有一个黑客梦呢！ 然后就开始研究了啊。趁着有兴趣的时候。 先去搞了CSDN的500万密码，然后开始把密码删选，把最常出现的几千个搞出来，然后跟崔嵬学习了一下对网站结构的分析之类的。再然后就发现了，还是学校教务处网站比较简单，哈哈，就拿学校教务处网站开工练手了。 记得第一个爆出密码来的同学是一个女生，成绩非常好，名字也挺好的，跟小说《诛仙》里一个人物的名相同，后来还认识了，算是挺有缘分的~哈哈~~ 当时先是把所有学号和密码相同的同学爆了一遍，后来发现不过瘾，把生日密码来尝试了一下</description>
    </item>
    
    <item>
      <title>“我艹”——写给星姐的一封信</title>
      <link>https://wonderflow.info/posts/2012/07/03/e68891e889b9-e58699e7bb99e6989fe5a790e79a84e4b880e5b081e4bfa1/</link>
      <pubDate>Tue, 03 Jul 2012 15:17:06 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/03/e68891e889b9-e58699e7bb99e6989fe5a790e79a84e4b880e5b081e4bfa1/</guid>
      <description>星姐，就这么毕业了啊！ 我让你写大学四年毕业了的总结感受，你却说让我先写前三年的。 其实，想到今年暑假集训，当年我刚进集训队时的那批人里，如今就只剩下我们零九这批当年的新人了，心里就有种说不出的难过。铁打的营盘，流水的兵，似乎世上的事，总归是这样的。 以前你还在学校的时候，我就常跟你说，我害怕啊，还有那么多东西没从你那学到手呢！你怎么就这么，毕业了呢？ 想起我第一次见你的时候，是在当年我第一次参加校赛的时候，那时你是工作人员吗，总觉得像你这样，在场内走来走去挺牛逼的。哈哈，后来我确实也经常扮演这样的角色，传说中的裁判。不过那时我的心里，该是对自己大学3年都将奉献的事业，似乎是没有一点概念的。 当时只是单</description>
    </item>
    
    <item>
      <title>VIM使用的常用命令</title>
      <link>https://wonderflow.info/posts/2012/07/02/vime4bdbfe794a8e79a84e5b8b8e794a8e591bde4bba4/</link>
      <pubDate>Mon, 02 Jul 2012 18:04:52 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/02/vime4bdbfe794a8e79a84e5b8b8e794a8e591bde4bba4/</guid>
      <description>高级一些的编辑器，都会包含宏功能，vim当然不能缺少了，在vim中使用宏是非常方便的： :qx 开始记录宏，并将结果存入寄存器x q 退出记录模式 @x 播放记录在x寄存器中的宏命令 稍微解释一下，当在normal模式下输入:qx后，你对文本的所有编辑动作将会被记录下来，再次输入q即退出了记录模 式，然后输入@x对刚才记录下来的命令进行重复，此命令后可跟数字，表示要重复多少次，比如@x20，可以重复20次。这个在文本的批处理中是非常有用的。 同时编辑多个文件 在vim众多的插件中，有一个叫minibuffer的插件，就是下面所说的标签页功能了，可以支持同时编辑多个文件。 标签命令 :tabe fn 在一个新的标签页中编辑文件fn gt 切换到</description>
    </item>
    
    <item>
      <title>Hello world!</title>
      <link>https://wonderflow.info/posts/2012/07/02/hello-world/</link>
      <pubDate>Mon, 02 Jul 2012 12:29:16 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/07/02/hello-world/</guid>
      <description>我的个人Blog终于开通了，其实早就有了这个想法，只是磕磕绊绊拖延了太久太久。但是不管怎么样，终于是开了起来，域名也是我非常喜欢的，WonderfloW。暑假集训开始了，努力吧，今年是最后一年了。 别留遗憾！ 日志里这首歌听了很多遍，越听越耐听。 几乎每一个程序的开头都是学到的“hello world~”，所以我的这篇开博第一日志，自然也免不了这个惯例，呵呵。 最后，很累了，我吼一声，代表我活着。</description>
    </item>
    
    <item>
      <title>2012，新的开始</title>
      <link>https://wonderflow.info/posts/2012/01/07/2012efbc8ce696b0e79a84e5bc80e5a78b/</link>
      <pubDate>Sat, 07 Jan 2012 08:34:28 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/01/07/2012efbc8ce696b0e79a84e5bc80e5a78b/</guid>
      <description>早上醒来，盯着日历看了好一会，总觉得有点别扭，想不到，大家口中说了这么久的2012就这么来了。而它的一月、它的开头，却像是往常任何一年的开头一样，稀松平常。大家依旧是忙着复习考试，忙着回家，忙着过年。但我总觉得，它该有所不同。 大三也就在我们这帮人不断的呐喊着“我们也大三了！”的声音中悄悄过去了一半。暑假里我是提前过来的，所以我对开学没有什么清晰的概念。但是我记得好吟开学那天来，我去一号门接了他，他还请我在那吃了饭，我问他，怎么提前来了几天，他说来学开车了。然后前天，他回家前那晚上，我问好吟，学车的进度怎么样了，好吟说，还是那样。当时笑的前仰后合的。后来细想想，这开学前、学期结束一前一后两番对话</description>
    </item>
    
    <item>
      <title>第四届中兴图灵杯——我的Lost_Island</title>
      <link>https://wonderflow.info/posts/2011/12/07/e7acace59b9be5b18ae4b8ade585b4e59bbee781b5e69daf-e68891e79a84lost_island/</link>
      <pubDate>Wed, 07 Dec 2011 03:22:28 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2011/12/07/e7acace59b9be5b18ae4b8ade585b4e59bbee781b5e69daf-e68891e79a84lost_island/</guid>
      <description>就在前天晚上，第四届中兴图灵杯终于圆满结束了。而我们的lost island图灵杯平台，这一年的奋斗与努力，也算是圆满收场了！ 激情昂扬的背景音乐，华丽绚烂的技能特效，扣人心弦的比赛节奏以及激情幽默的现场解说，这是我自己对现场的评价，确实，纵使还有不少地方没有做到位，但是这已经是我很满意的一届图灵杯了。 比赛结束后，听人说，这次比赛很好看，挺刺激的。那时心里真的很开心。多少次英雄之间的较量，击杀与反击杀，多少次激动人心的精彩瞬间，华丽的崛地而起。 也许有的选手在第一轮二十四进十二的时候被淘汰了，也许有的选手离冠军只有0.2s的一步之遥，也许我们总免不了这样那样的遗憾！但是请相信我，你们的汗水绝没有白流</description>
    </item>
    
    <item>
      <title>DZ问：怎样的大学才是完整的？</title>
      <link>https://wonderflow.info/posts/2011/10/30/dze997aeefbc9ae6808ee6a0b7e79a84e5a4a7e5ada6e6898de698afe5ae8ce695b4e79a84efbc9f/</link>
      <pubDate>Sun, 30 Oct 2011 13:00:39 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2011/10/30/dze997aeefbc9ae6808ee6a0b7e79a84e5a4a7e5ada6e6898de698afe5ae8ce695b4e79a84efbc9f/</guid>
      <description>昨天晚上，今天早上，想了很久很久。写给自己，大家共勉。 呵呵，怎样的大学才是完整的呢？ 其实，这个问题很大啊，每个人都有每个人的答案，或者说，谁也说不清这个答案是什么。 每个大学生都在各自的舞台上，寻找着各自的答案。 有的时候，很迷茫，自己选择的生活，选择的道路，到底是对是错呢？ 有的人，大学里，按部就班的上课，自习，服从组织的安排，从不缺课，每天风雨无阻的坚持自习。即使偶尔有几句骂声，从不违背组织的安排。 也有的人，就是做着自己喜欢的事，想上课的就去，想翘的课就翘，想学的时候就学，想玩的时候就玩，从来没有什么固定的组织来约束自己。自己有自己的原则，自己可以把自己想做的事做得很好。 还有很多很多的风格，类型</description>
    </item>
    
    <item>
      <title>在赶</title>
      <link>https://wonderflow.info/posts/2010/06/13/e59ca8e8b5b6/</link>
      <pubDate>Sun, 13 Jun 2010 15:00:04 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2010/06/13/e59ca8e8b5b6/</guid>
      <description>其实当大波和木羽一起在街边等车的时候，大波真的没想到，现在会这么后悔当时为什么没有把那碗炒饭吃的快一点，不然也不会只吃了一口就被一个电话叫走，导致现在这么饿，还，这么冷。无人寂静街道的凉风吹拂下，大波忍不住打了个哆嗦。看着手表正缓慢指向凌晨两点的时针，内心不免有些无奈。然而时间依旧在一分一秒的流逝着，同样伴随着的焦急倒反而使他感觉不到一丝困意。 “动车什么时候开？”大波问了一下木羽。 “还有两个小时。应该有足够的时间等到车。”比起哥哥来，当事人木羽反倒是一脸淡定。 大概任何认识木羽的人如果在此时此刻看见这两个人，都不会相信其中有一个人是木羽的吧。平时无论什么事都做得中规中矩，品学兼优的好孩子木羽，每</description>
    </item>
    
    <item>
      <title>好吟哥前传</title>
      <link>https://wonderflow.info/posts/2010/05/18/e5a5bde5909fe593a5e5898de4bca0/</link>
      <pubDate>Tue, 18 May 2010 15:09:22 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2010/05/18/e5a5bde5909fe593a5e5898de4bca0/</guid>
      <description>认识好吟哥的人心里都会忍不住说：“叫兽算个鸟！” ——题记 其实进了大学好久我都依旧有些不敢相信这个事实——叫兽就生活在我身边。而我有幸给他取了个优雅的绰号——好吟哥。也许他常常从你身边擦肩而过，而你却无缘一睹他的魅力。 不知不觉，认识好吟哥已有半年多了，而如今再回忆起刚开学时对他的第一印象，仍会感到一阵心悸并在额头冒起丝丝冷汗…… 那，是一个看上去略显瘦弱矮小的男生，全额奖学金外加本硕博连读资格的他，直接凭借他那一本正经的样子深深震撼了我们。“唉，估计又是素质教育培养出的傻子吧！”似乎当初有哥们如是说过。 一开始，刚进大学的我们纷纷参加了一系列社团，而好吟哥犹豫了再三，还是决定再犹豫一会究竟要不要报名</description>
    </item>
    
  </channel>
</rss>
