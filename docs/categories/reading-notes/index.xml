<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading Notes on 奇迹之流WonderfloW</title>
    <link>https://wonderflow.info/categories/reading-notes/</link>
    <description>Recent content in Reading Notes on 奇迹之流WonderfloW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 24 Oct 2014 13:50:30 +0000</lastBuildDate><atom:link href="https://wonderflow.info/categories/reading-notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《程序员修炼之道》的笔记</title>
      <link>https://wonderflow.info/posts/2014/10/24/e3808ae7a88be5ba8fe59198e4bfaee782bce4b98be98193e3808be79a84e7ac94e8aeb0/</link>
      <pubDate>Fri, 24 Oct 2014 13:50:30 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/10/24/e3808ae7a88be5ba8fe59198e4bfaee782bce4b98be98193e3808be79a84e7ac94e8aeb0/</guid>
      <description>老样子：印象笔记链接 责任：Provide Options, Don’t Make Lame Excuses. 什么是负责？就是在出了问题时，要提供各种选择，而不是找借口。不要说事情做不到；要说明能够做什么来挽回局面。 软件的熵：Don’t Live with Broken Windows. 不要留着“破窗户”（低劣的设计、错误的决策、糟糕的代码）不修。发现一个修一个，如果没有时间整理，就把出问题的代码放在注释里或者显示未实现。 足够好的软件：Make Quality a Requirements Issue 让用户参与权衡质量的需求 知识资产：Invest Regularly in Your Knowledge Portfolio 经营你的知识资产: 定期投资：尽管每次投资量小，但是要保持习惯 多元化：你知道的不同的事情越多，你就越有价值。你掌握的技术越多，你就越能更好地进行调整，赶上变化。 管理风险：不要把所有的技术</description>
    </item>
    
    <item>
      <title>读《活着》有感</title>
      <link>https://wonderflow.info/posts/2014/08/23/e8afbbe3808ae6b4bbe79d80e3808be69c89e6849f/</link>
      <pubDate>Sat, 23 Aug 2014 14:35:56 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/08/23/e8afbbe3808ae6b4bbe79d80e3808be69c89e6849f/</guid>
      <description>张艺谋根据余华的小说拍的电影《活着》被人广为赞誉，但实际，小说本身的内容比之电影，要更沉重、残酷、精彩的多。小说描述的是一个近在眼前的年代，发生的真实到近乎血腥的故事。 我很喜欢韩寒的这个序言： 其实这本书以前我也读过部分，但是那时候是不懂的，就像现在来读高中时通篇华丽辞藻微言大义的作文，老师给的分数再高，也只是流于表面。 而这个月，又有两个极为熟悉的亲戚朋友的父亲相继过世了，这让我无比真实的接近了这些生死之事。明白了这期间的沉重、深刻与严肃，甚至不知道安慰的词句该从何开始。我明白了那是一种旁人无法体会到的苦难、不舍和勇气。 所以无论是余华的原版小说《活着》，还是张艺谋的电影《活着》，里面都没有旁人对</description>
    </item>
    
    <item>
      <title>《大数据时代》</title>
      <link>https://wonderflow.info/posts/2014/05/27/e3808ae5a4a7e695b0e68daee697b6e4bba3e3808b/</link>
      <pubDate>Tue, 27 May 2014 16:17:05 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/05/27/e3808ae5a4a7e695b0e68daee697b6e4bba3e3808b/</guid>
      <description>从古至今，无论是东方的神灵还是西方的巫师，人们都一直怀揣着想要预知未来的美好愿望。如今，大数据时代来临了，就像显微镜让人们观测到了微生物的世界一样，对大数据的收集、分析、处理给我们预知未来带来了极大的可能。 自从人类进入了信息时代，每十年都会出现一次巨大的技术革命。从1980年开始，信息技术的基础设施开始在各地搭建起来；1990年，个人电脑开始普及，各类桌面应用程序如雨后春笋般涌现；2000年，互联网普遍进入了人们的视野，上网慢慢变成了习惯，打开浏览器就能做你想做的事情；2010年，云时代的序幕业已拉开，移动互联网新兴，人们的数据在云端存储同步，随时随地都可以访问，你可以使用的设备也变得五花八门</description>
    </item>
    
    <item>
      <title>《看见》与《在难搞的日子笑出声来》</title>
      <link>https://wonderflow.info/posts/2014/02/04/e3808ae79c8be8a781e3808be4b88ee3808ae59ca8e99abee6909ee79a84e697a5e5ad90e7ac91e587bae5a3b0e69da5e3808b/</link>
      <pubDate>Tue, 04 Feb 2014 07:28:38 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2014/02/04/e3808ae79c8be8a781e3808be4b88ee3808ae59ca8e99abee6909ee79a84e697a5e5ad90e7ac91e587bae5a3b0e69da5e3808b/</guid>
      <description>最近读了两本书，都是难得一见的好书，一本是柴静写的《看见》，一本是大鹏写的《在难搞的日子笑出声来》。 为什么说难得一见的好书呢？一是因为往年我读书其实不多，读的大多都是专业技术相关的书，要么就是YY小说，前者其实是为了谋生而读，后者未必能谈得上多好。二来，这两本书都是作者凝聚了多年生活阅历与智慧的结晶，里面有很多平凡但极具品味的内容，很有内涵。 说来也巧，两位作者的职业都决定了他们能见到很多人，看到很多事，去过很多地方，也吃过很多苦，所以自然而然也明白了很多道理，有很多丰富的阅历能够说给你听，耐人寻味。 [caption width=&amp;ldquo;231&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo;]柴静《看见》[/captio</description>
    </item>
    
    <item>
      <title>&#39;《MapReduce Design Patterns》读书笔记——浅谈Map/Reduce设计模式 &#39;</title>
      <link>https://wonderflow.info/posts/2013/12/15/e3808amapreduce-design-patternse3808be8afbbe4b9a6e7ac94e8aeb0-e6b585e8b088mapreducee8aebee8aea1e6a8a1e5bc8f/</link>
      <pubDate>Sun, 15 Dec 2013 15:48:24 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/12/15/e3808amapreduce-design-patternse3808be8afbbe4b9a6e7ac94e8aeb0-e6b585e8b088mapreducee8aebee8aea1e6a8a1e5bc8f/</guid>
      <description>概述# MapReduce是一个基于Hadoop的算法框架。本文将从Hadoop开始介绍，然后重点讲述可用于Hadoop上的Map/Reduce设计模式。 Hadoop简介# Hadoop历史# Hadoop最早起源于Apache Nutch，该项目始于2002年，是Apache Lucence的子项目之一。该项目的出现源于两篇论文，一篇是2003年发表的“关于谷歌分布式文件系统”（NDFS：Nutch Distributed File System），描述了谷歌搜索引擎网页相关数据存储架构，解决Nutch遇到的网页抓取和索引过程中产生的超大文件存储需求问题。一篇是2004年发表的“关于谷歌分布式计算框架MapReduce”，描述了谷歌</description>
    </item>
    
    <item>
      <title>读《史蒂夫·乔布斯传》琐记</title>
      <link>https://wonderflow.info/posts/2013/12/01/e8afbbe3808ae58fb2e89282e5a4abc2b7e4b994e5b883e696afe4bca0e3808be79090e8aeb0/</link>
      <pubDate>Sun, 01 Dec 2013 13:49:40 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/12/01/e8afbbe3808ae58fb2e89282e5a4abc2b7e4b994e5b883e696afe4bca0e3808be79090e8aeb0/</guid>
      <description>《史蒂夫·乔布斯传》很有名，出版了两年多才去看似乎略有些相见恨晚。但是想到才拥有自己的第一件苹果产品两天就开始在其上阅读，也不觉得遗憾。整个周末，整整两天都在看这本长达八百页书，一下子就看完了。 本书以乔布斯的叛逆与暴躁开头，以乔布斯的睿智传奇结尾。叙述中肯，你能很清晰的看到乔布斯的缺点，也能清楚感受到乔布斯至于苹果、至于这个世界的伟大。 乔布斯是个控制欲极强的人，他年轻时奉行素食主义、不爱洗澡、独断专行、脾气暴躁、丝毫不顾及他人的面子，显得极其自我。后来这些习惯似乎都有所改变，我看到的他变成了一个慈祥的父亲、顾家的丈夫。 乔布斯也是一个洞察力极强的人，他能轻易看穿人心，他的语言有魔力，让你相信他，</description>
    </item>
    
    <item>
      <title>《站在两个世界的边缘（程浩）》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/11/29/e3808ae7ab99e59ca8e4b8a4e4b8aae4b896e7958ce79a84e8beb9e7bc98e3808befbc88e7a88be6b5a9efbc89e8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Fri, 29 Nov 2013 16:55:43 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/29/e3808ae7ab99e59ca8e4b8a4e4b8aae4b896e7958ce79a84e8beb9e7bc98e3808befbc88e7a88be6b5a9efbc89e8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>这本书是程浩写的，程浩是个怎么样的人呢？在七月份的时候，知乎上有了太多的讨论。在此，我只想说，他是个了不起的榜样。他自己因为残疾不会走路，但是他却教会了别人走路。他的意志给人以力量，他对生命的思考给人以警醒，他是个职业病人但是他用自己的文字获得了世界的认可。 因为程浩，我第一次购买正版的电子书。我尊重他，也被他感动。 PS：发现多看阅读很不错，打通了印象笔记，在电子书上阅读做下来的笔记可以自动导出到印象笔记，而且格式也很美。可惜了，放到博客上格式就变得难看了。 附上读书笔记内容。 昂着头的艺术# 2013-11-29 00:21:16 不必可怜谁，不必同情谁。所谓生活，不过就是一种“昂着头的艺术”，仅此而已。 我和老妈那些事儿 2013-11-30 00:38:20 “在很久很</description>
    </item>
    
    <item>
      <title>《Practices of an Agile Developer》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/11/26/e8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Tue, 26 Nov 2013 05:01:57 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/26/e8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>这是一本比较普通的书，读了没什么坏处，不读也没什么大的损失。 全书讲了有关敏捷开发应该有的45个习惯，有的很实用，有的比较啰嗦。 比较有启发的一些习惯： 1、先难后易，先要解决技术难点，把简单的问题留到最后。 2、Blame doesn&amp;rsquo;t fix bugs. 3、写单元测试很重要。如果你的代码写单元测试很困难，说明设计本身有问题。 4、要专业而不是自我。对事不对人。 5、持续小步前进才是敏捷。一个学习型的团队才是好团队。 6、把握开发的节奏，保持事件之间稳定重复的间隔。 7、让客户做决定。给客户想要的软件而不是我们臆想的。 8、根据需要选择技术，而不是卖弄技术。 9、提早集成、频繁集成。保持可发布状态。 10、提早实现自动化部署。 11、使用短迭</description>
    </item>
    
    <item>
      <title>《ruby元编程》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/11/21/e3808arubye58583e7bc96e7a88be3808be8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Thu, 21 Nov 2013 16:27:21 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/11/21/e3808arubye58583e7bc96e7a88be3808be8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>总的来说，《ruby元编程》是一本好书。 当我拿到这本书的时候，第一反应是什么叫元编程？书上的定义是这样的：“元编程是写出编写代码的代码”。 而我认为，元编程是ruby语言的一些高级特性，是属于ruby的奇技淫巧。 有意思的是，这本书不是枯燥的一章一章给你灌输这些知识，而是描述公司里一个老程序员一对一带一个年轻程序员的故事。就是所谓的mentor/buddy制度，大部分IT公司都有，就是不知道贯彻的怎么样。不管书中描述的这样的工作情况是不是真的，都很令人神往。 我觉得一个IT行业的大公司就该有这样的气度，把新员工当朋友、兄弟一样培养，毕竟IT行业中，人才是最大的财富。这样带起来的团队，相比凝聚力也是极</description>
    </item>
    
    <item>
      <title>JavaScript中的闭包（JavaScript权威指南读书笔记）</title>
      <link>https://wonderflow.info/posts/2013/09/15/javascripte4b8ade79a84e997ade58c85efbc88javascripte69d83e5a881e68c87e58d97e8afbbe4b9a6e7ac94e8aeb0efbc89/</link>
      <pubDate>Sun, 15 Sep 2013 16:31:10 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/09/15/javascripte4b8ade79a84e997ade58c85efbc88javascripte69d83e5a881e68c87e58d97e8afbbe4b9a6e7ac94e8aeb0efbc89/</guid>
      <description>最近在看javascript的书，稍微学习一些前端的东西，以便做些web应用的方便。 以前看到闭包这个概念一直不太懂，今天下定决心好好研读了一下，终于明白了一二。 像绝大多数高级编程语言，javascript也有其词法的作用域。意思是说，当函数被执行的时候，起作用的不是被调用时的变量作用域，而是在函数被定义的时候声明的变量域。所以为了实现这个词法作用域的功能，javascript必须在中间过程中不仅保存函数的代码，还需要保存当时所引用的作用域链。这个函数对象和函数变量保存起来的作用域的组合在计算机科学里的称呼就叫做闭包。 从技术角度来说，javascript里的函数都是闭包：它们都是对象，并且它们有</description>
    </item>
    
    <item>
      <title>《git pocket guide》读书笔记</title>
      <link>https://wonderflow.info/posts/2013/08/27/e3808agit-pocket-guidee3808be8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Tue, 27 Aug 2013 15:47:21 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2013/08/27/e3808agit-pocket-guidee3808be8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>最近读了2013年新出的一本关于git的书《git pocket guide》既锻炼了自己的英语阅读，又学习了git，真是一举两得。 读书笔记长达40多页，要是整理成wordpress网页的格式，非得折腾死，还是直接上传一个pdf比较直接，看这里：chinese_git_pocket_wonderflow。 学会了git，就该常用github了，这个程序员的天堂。</description>
    </item>
    
    <item>
      <title>《黑客与画家》读书笔记</title>
      <link>https://wonderflow.info/posts/2012/09/03/e3808ae9bb91e5aea2e4b88ee794bbe5aeb6e3808be8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Mon, 03 Sep 2012 14:22:32 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/09/03/e3808ae9bb91e5aea2e4b88ee794bbe5aeb6e3808be8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>这又是我读到的一本神奇的书，他坚定了我的世界观。 说起这本书，还是在活动室溜达的时候,无意中在黄典典桌上发现的。当时对这本书也是慕名已久了，然后随手一翻就发现停不下来了，就这样，连着两三天，每天一有空就看，不知不觉就看完了。这真是一本IT界思想盛宴的书啊。 说起这本书，不得不提一下本书的作者，本书其实是硅谷创业之父Paul Graham的文集。而Paul Graham又是何许人也呢？ 他是世界上首个互联网应用程序Viaweb开发人之一，也是viaweb公司的创始人，后被雅虎收购改名为&amp;quot;Yahoo!Store&amp;quot;。开创了天使投资的模式，被《福布斯》杂志喻为“撼动硅谷的人”。目前为止扶持过</description>
    </item>
    
    <item>
      <title>《unix&amp;linux大学教程》 推荐</title>
      <link>https://wonderflow.info/posts/2012/08/31/e68ea8e88d90/</link>
      <pubDate>Fri, 31 Aug 2012 05:54:35 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/31/e68ea8e88d90/</guid>
      <description>最近把这本书看完了，觉得讲述的非常好，有志于学习linux的青年们都该阅读一下，着实是一本linux的入门好书。 这是一本神奇的书。作者用诙谐幽默而又细致详实的手法，书写了这本让人一拿起来开始阅读就不愿意放下的书。也许你以前可能会觉得技术书籍都是枯燥乏味的，但是看完这本书，你绝对会对这种思想改观。 作者不再像是对着纸张陈述一个技术事实，而更像一个老师，一个老朋友在向你讲述linux里面的这些细节故事。除了技术以外，他会告诉你每个名称是怎么来的，这里面包含了一个什么样的故事背景，又包含了一种什么样的思想。在这样的描述下，你可能很容易的就记住了这些指令的用法，并被linux自由的精神所深深的折服。 li</description>
    </item>
    
    <item>
      <title>《编程之美》读书笔记</title>
      <link>https://wonderflow.info/posts/2012/08/28/e7bc96e7a88be4b98be7be8ee8afbbe4b9a6e7ac94e8aeb0/</link>
      <pubDate>Tue, 28 Aug 2012 12:31:10 +0000</pubDate>
      
      <guid>https://wonderflow.info/posts/2012/08/28/e7bc96e7a88be4b98be7be8ee8afbbe4b9a6e7ac94e8aeb0/</guid>
      <description>总的来说，编程之美是一本讲面试算法的书，至于面试问算法到底问到的几率有多大，我不知道。不过这本书本身的很多问题是非常有意思的。 0.1、前言趣题： 房间里有三盏灯，屋外有三个开关，分别控制三盏灯，进了房间才能知道哪个灯泡是亮的，问只进入房间一次，怎么区分哪个开关对应哪个灯？ 这个题的有意思之处在于让你拓宽思维，不要被既定的线路束缚住。区别三个灯泡，一定需要两个条件，一个是灯泡亮否，还有一个条件哪里来呢？答案是温度，灯泡开了一会，表面温度自然就会上升。 0.2、前言感悟： 面试如考试：基础很重要，但是考前看看面试题库也是个不错的选择。 面试就是探讨：多把自己的想法告诉面试官，对问题的思考或许比问题的答案更重</description>
    </item>
    
  </channel>
</rss>
